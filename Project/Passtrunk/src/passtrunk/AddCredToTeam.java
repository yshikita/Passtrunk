/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passtrunk;

import SecurityED.AESEncryptDecrypt;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Yendy
 */
public class AddCredToTeam extends javax.swing.JFrame {

    private DashboardFrame dashboard;
    private int teamIndex;

    public void setTeamIndex(int teamIndex) {
        this.teamIndex = teamIndex;
    }

    public void setDashboard(DashboardFrame dashboard) {
        this.dashboard = dashboard;
    }
    
    /**
     * Creates new form AddCredToTeam
     */
    public AddCredToTeam() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        credsToAddList = new javax.swing.JList<>();
        credToTeamButton = new javax.swing.JButton();
        closeCredTeamButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel1.setText("Add Credential");

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(216, 216, 216));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("Please select the credential you would like to share with this team. This credential will be visible by every member of the team.");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setBorder(null);
        jTextArea1.setFocusable(false);
        jTextArea1.setMinimumSize(new java.awt.Dimension(548, 44));

        credsToAddList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(credsToAddList);

        credToTeamButton.setBackground(new java.awt.Color(64, 138, 201));
        credToTeamButton.setForeground(new java.awt.Color(255, 255, 255));
        credToTeamButton.setText("Add");
        credToTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credToTeamButtonActionPerformed(evt);
            }
        });

        closeCredTeamButton.setBackground(new java.awt.Color(64, 138, 201));
        closeCredTeamButton.setForeground(new java.awt.Color(255, 255, 255));
        closeCredTeamButton.setText("Close");
        closeCredTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeCredTeamButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1)
                    .addComponent(jTextArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(credToTeamButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(closeCredTeamButton)
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {closeCredTeamButton, credToTeamButton});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(credToTeamButton)
                    .addComponent(closeCredTeamButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void credToTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credToTeamButtonActionPerformed
        try {
            String selection = credsToAddList.getSelectedValue();
            int credID = 0;
            for(Credential cred: RequestsHTTP.user.credentials){
                if(cred.getName().equals(selection)){
                    RequestsHTTP.user.teams.get(teamIndex).teamCreds.add(cred);
                    DefaultListModel listModel =(DefaultListModel) credsToAddList.getModel();
                    listModel.removeElement(selection);
                    credID = cred.getCredID();
                    break;
                }
            }
            String url = "https://passtrunk.com/api/credential/share";
            String reqbody = URLEncoder.encode("userid", "UTF-8")+"="+URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()),"UTF-8")
                    +"&"+URLEncoder.encode("name", "UTF-8")+"="+URLEncoder.encode(selection,"UTF-8")
                    +"&"+URLEncoder.encode("credentialid", "UTF-8")+"="+URLEncoder.encode(String.valueOf(credID),"UTF-8")
                    +"&"+URLEncoder.encode("shareto", "UTF-8")+"="+URLEncoder.encode(String.valueOf(RequestsHTTP.user.teams.get(teamIndex).getId()),"UTF-8")
                    +"&"+URLEncoder.encode("token", "UTF-8")+"="+URLEncoder.encode(RequestsHTTP.user.getToken(),"UTF-8");
            RequestsHTTP reqhttp = new RequestsHTTP(url,"POST",reqbody);
            boolean success = reqhttp.doTransaction("", 0);
            
            if(success){
                JOptionPane.showMessageDialog(null, "Info: Credential added.", "Info Box: ", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
                JOptionPane.showMessageDialog(null, "Error: Add credential failed.", "ErrorBox: ", JOptionPane.ERROR_MESSAGE);
            }
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(AddCredToTeam.class.getName()).log(Level.SEVERE, null, ex);
        }
                
    }//GEN-LAST:event_credToTeamButtonActionPerformed

    private void closeCredTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeCredTeamButtonActionPerformed
        dashboard.setEnabled(true);
        dashboard.PopulateManTeamLists();
        this.dispose();
    }//GEN-LAST:event_closeCredTeamButtonActionPerformed

    
    public void PopulateList(){
        DefaultListModel lmodel = new DefaultListModel();
        for(Credential cred: RequestsHTTP.user.credentials){
            if(!ContainsCred(cred.getName(), cred.getOwnerID())){
                lmodel.addElement(cred.getName());
            }
        }
        credsToAddList.setModel(lmodel);
    }
    
    private boolean ContainsCred(String credName, int owner){
        for(Credential cred: RequestsHTTP.user.teams.get(teamIndex).teamCreds){
            if(credName.equals(cred.getName()) && owner == cred.getOwnerID()){
                return true;
            }
        }
        return false;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCredToTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCredToTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCredToTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCredToTeam.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCredToTeam().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeCredTeamButton;
    private javax.swing.JButton credToTeamButton;
    private javax.swing.JList<String> credsToAddList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
