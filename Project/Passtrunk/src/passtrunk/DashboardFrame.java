/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package passtrunk;

import SecurityED.AESEncryptDecrypt;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yendy
 */
public class DashboardFrame extends javax.swing.JFrame {

    ArrayList <JLabel> labelList;
    ArrayList <JTextField> textFieldList;
    int custFieldIndex;
    int teamIndex;
    ArrayList<String> credNames;
    ArrayList<String> teamNames;
    
    /**
     * Creates new form DashboardFrame
     */
    public DashboardFrame() {
        labelList = new ArrayList();
        textFieldList = new ArrayList();
        credNames = new ArrayList();
        teamNames = new ArrayList();
        initComponents();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        menuPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        dashboardButton = new javax.swing.JButton();
        addCredMenuButton = new javax.swing.JButton();
        credMngrButton = new javax.swing.JButton();
        teamsButton = new javax.swing.JButton();
        teamMngrButton = new javax.swing.JButton();
        newsFeedButton = new javax.swing.JButton();
        lastLoginButton = new javax.swing.JButton();
        settingsButton = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        dashboardMainLP = new javax.swing.JLayeredPane();
        dashboardPanel = new javax.swing.JPanel();
        credsDashPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        credList = new javax.swing.JList<>();
        credSearchTF = new javax.swing.JTextField();
        credEditButton = new javax.swing.JButton();
        teamsDashPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        teamList = new javax.swing.JList<>();
        teamSearchTF = new javax.swing.JTextField();
        teamEditButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        newsFeedEdPane = new javax.swing.JEditorPane();
        addCredPanel = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        addCredHoldPanel = new javax.swing.JPanel();
        chooseCredCB = new javax.swing.JComboBox<>();
        addCredLP = new javax.swing.JLayeredPane();
        bankAcctPanel = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        credBANameTF = new javax.swing.JTextField();
        bankNameBATF = new javax.swing.JTextField();
        bankURLTF = new javax.swing.JTextField();
        bankUsernameTF = new javax.swing.JTextField();
        bankPasswordTF = new javax.swing.JTextField();
        bankAcctNumTF = new javax.swing.JTextField();
        bankRoutNumTF = new javax.swing.JTextField();
        creditCardPanel = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        credCCNameTF = new javax.swing.JTextField();
        bankNameCCTF = new javax.swing.JTextField();
        credCardNumTF = new javax.swing.JTextField();
        expDateCCTF = new javax.swing.JTextField();
        ccvTF = new javax.swing.JTextField();
        nameonCardTF = new javax.swing.JTextField();
        cardTypeFTF = new javax.swing.JFormattedTextField();
        emailPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        credNameETF = new javax.swing.JTextField();
        urlEmailLoginTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        passwordEmTF = new javax.swing.JTextField();
        loginPanel = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        credNameLTF = new javax.swing.JTextField();
        usernameLogTF = new javax.swing.JTextField();
        passwordLogTF = new javax.swing.JTextField();
        emailLogTF = new javax.swing.JTextField();
        softLicPanel = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        credNameSLTF = new javax.swing.JTextField();
        softNameTF = new javax.swing.JTextField();
        softKeyTF = new javax.swing.JTextField();
        urltoSoftTF = new javax.swing.JTextField();
        expDateSoftFTF = new javax.swing.JFormattedTextField();
        ssnPanel = new javax.swing.JPanel();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        credNameSSNTF = new javax.swing.JTextField();
        nameonSSTF = new javax.swing.JTextField();
        ssnumTF = new javax.swing.JTextField();
        websitePanel = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        credNameWeTF = new javax.swing.JTextField();
        websNameTF = new javax.swing.JTextField();
        urltoWebsTF = new javax.swing.JTextField();
        usernameWeTF = new javax.swing.JTextField();
        passwordWeTF = new javax.swing.JTextField();
        emailWeTF = new javax.swing.JTextField();
        wirelessPanel = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        credNameWiTF = new javax.swing.JTextField();
        ssidTF = new javax.swing.JTextField();
        encryptionTypeTF = new javax.swing.JTextField();
        usernameWiTF = new javax.swing.JTextField();
        passwordWiTF = new javax.swing.JTextField();
        customSP = new javax.swing.JScrollPane();
        customPanel = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        credNameCustTF = new javax.swing.JTextField();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        addFieldButton = new javax.swing.JButton();
        addCredButton = new javax.swing.JButton();
        credMngrPanel = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        searchCredManTF = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        credsTypesTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        addChooseCredCB = new javax.swing.JComboBox<>();
        addCredManButton = new javax.swing.JButton();
        addCredManLP = new javax.swing.JLayeredPane();
        addBankAcctSP = new javax.swing.JScrollPane();
        addBankAcctPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        addCredBANameTF = new javax.swing.JTextField();
        addBankNameBATF = new javax.swing.JTextField();
        addBankURLTF = new javax.swing.JTextField();
        addBankUsernameTF = new javax.swing.JTextField();
        addBankPasswordTF = new javax.swing.JTextField();
        addBankAcctNumTF = new javax.swing.JTextField();
        addBankRoutNumTF = new javax.swing.JTextField();
        addCredCardSP = new javax.swing.JScrollPane();
        addCredCardPanel = new javax.swing.JPanel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        addCredCCNameTF = new javax.swing.JTextField();
        addBankNameCCTF = new javax.swing.JTextField();
        addCredCardNumTF = new javax.swing.JTextField();
        addExpDateCCTF = new javax.swing.JTextField();
        addCcvTF = new javax.swing.JTextField();
        addNameonCardTF = new javax.swing.JTextField();
        addCardTypeTF = new javax.swing.JTextField();
        addEmailPanel = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        addCredNameETF = new javax.swing.JTextField();
        addUrlEmailLoginTF = new javax.swing.JTextField();
        addEmailTF = new javax.swing.JTextField();
        addPasswordEmTF = new javax.swing.JTextField();
        addLoginPanel = new javax.swing.JPanel();
        jLabel83 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        addCredNameLTF = new javax.swing.JTextField();
        addUsernameLogTF = new javax.swing.JTextField();
        addPasswordLogTF = new javax.swing.JTextField();
        addEmailLogTF = new javax.swing.JTextField();
        addSoftLicPanel = new javax.swing.JPanel();
        jLabel87 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        addCredNameSLTF = new javax.swing.JTextField();
        addSoftNameTF = new javax.swing.JTextField();
        addSoftKeyTF = new javax.swing.JTextField();
        addUrltoSoftTF = new javax.swing.JTextField();
        addExpDateSoftTF = new javax.swing.JTextField();
        addSsnPanel = new javax.swing.JPanel();
        jLabel92 = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        addCredNameSSNTF = new javax.swing.JTextField();
        addNameonSSTF = new javax.swing.JTextField();
        addSsnumTF = new javax.swing.JTextField();
        addWebsitePanel = new javax.swing.JPanel();
        jLabel95 = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        addCredNameWeTF = new javax.swing.JTextField();
        addWebsNameTF = new javax.swing.JTextField();
        addUrltoWebsTF = new javax.swing.JTextField();
        addUsernameWeTF = new javax.swing.JTextField();
        addPasswordWeTF = new javax.swing.JTextField();
        addEmailWeTF = new javax.swing.JTextField();
        addWirelessPanel = new javax.swing.JPanel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        addCredNameWiTF = new javax.swing.JTextField();
        addSsidTF = new javax.swing.JTextField();
        addEncryptionTypeTF = new javax.swing.JTextField();
        addUsernameWiTF = new javax.swing.JTextField();
        addPasswordWiTF = new javax.swing.JTextField();
        addCustomSP = new javax.swing.JScrollPane();
        addCustomPanel = new javax.swing.JPanel();
        jLabel106 = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        adCredNameCTF = new javax.swing.JTextField();
        fieldName1 = new javax.swing.JTextField();
        fieldCont1 = new javax.swing.JTextField();
        addFieldCustButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        pwLengthCB = new javax.swing.JComboBox<>();
        inSymbChB = new javax.swing.JCheckBox();
        incNumbChB = new javax.swing.JCheckBox();
        pwGeneratedTF = new javax.swing.JTextField();
        generatePwButton = new javax.swing.JButton();
        teamsPanel = new javax.swing.JPanel();
        teamsListPanel = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        teamTeamsList = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        teamSearchTeamTF = new javax.swing.JTextField();
        teamDetButton = new javax.swing.JButton();
        teamDetailBigPanel = new javax.swing.JPanel();
        teamNameDetLabel = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane11 = new javax.swing.JScrollPane();
        bigTeamCredList = new javax.swing.JList<>();
        editTeamCredButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        bigTeamMembList = new javax.swing.JList<>();
        editTeamMemButton = new javax.swing.JButton();
        teamMngrPanel = new javax.swing.JPanel();
        createTeamPanel = new javax.swing.JPanel();
        teamNameTF = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        teamShortNameTF = new javax.swing.JTextField();
        createTeamButton = new javax.swing.JButton();
        ownedTeamsPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        ownedTeamsList = new javax.swing.JList<>();
        teamsTMngrPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        teamsTMList = new javax.swing.JList<>();
        teamDetailsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        teamNameLabel = new javax.swing.JLabel();
        teamShortNLabel = new javax.swing.JLabel();
        gotoTeamButton = new javax.swing.JButton();
        teamCredPanel = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        teamCredsList = new javax.swing.JList<>();
        addTeamCredButton = new javax.swing.JButton();
        teamMembersPanel = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        teamMembList = new javax.swing.JList<>();
        addTeamMembButton = new javax.swing.JButton();
        newsFeedPanel = new javax.swing.JPanel();
        lastLoginPanel = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        lastLoginsTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        settingsPanel = new javax.swing.JPanel();
        acctSettingPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        firstNameSetTF = new javax.swing.JTextField();
        lastNameSetTF = new javax.swing.JTextField();
        emailSetTF = new javax.swing.JTextField();
        phNumSetFTF = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        usernameSetTF = new javax.swing.JTextField();
        secSettingsPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        comMethSetCB = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        timeOutSetTF = new javax.swing.JTextField();
        enTwoVerSetChB = new javax.swing.JCheckBox();
        jLabel65 = new javax.swing.JLabel();
        twoStepADelCB = new javax.swing.JComboBox<>();
        updateSetButton = new javax.swing.JButton();
        idLabel = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        showIDButton = new javax.swing.JButton();
        hideIDButton = new javax.swing.JButton();

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dashboard");
        setResizable(false);

        menuPanel.setBackground(new java.awt.Color(64, 138, 201));
        menuPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255)));

        jLabel1.setFont(new java.awt.Font("Lucida Console", 0, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("PASSTRUNK");

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        nameLabel.setForeground(new java.awt.Color(255, 255, 255));

        dashboardButton.setBackground(new java.awt.Color(64, 138, 201));
        dashboardButton.setForeground(new java.awt.Color(255, 255, 255));
        dashboardButton.setText("Dashboard");
        dashboardButton.setBorderPainted(false);
        dashboardButton.setContentAreaFilled(false);
        dashboardButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        dashboardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashboardButtonActionPerformed(evt);
            }
        });

        addCredMenuButton.setForeground(new java.awt.Color(255, 255, 255));
        addCredMenuButton.setText("Add Credential");
        addCredMenuButton.setBorderPainted(false);
        addCredMenuButton.setContentAreaFilled(false);
        addCredMenuButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        addCredMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCredMenuButtonActionPerformed(evt);
            }
        });

        credMngrButton.setForeground(new java.awt.Color(255, 255, 255));
        credMngrButton.setText("Credential Manager");
        credMngrButton.setBorderPainted(false);
        credMngrButton.setContentAreaFilled(false);
        credMngrButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        credMngrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credMngrButtonActionPerformed(evt);
            }
        });

        teamsButton.setForeground(new java.awt.Color(255, 255, 255));
        teamsButton.setText("Teams");
        teamsButton.setBorderPainted(false);
        teamsButton.setContentAreaFilled(false);
        teamsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        teamsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamsButtonActionPerformed(evt);
            }
        });

        teamMngrButton.setForeground(new java.awt.Color(255, 255, 255));
        teamMngrButton.setText("Team Manager");
        teamMngrButton.setBorderPainted(false);
        teamMngrButton.setContentAreaFilled(false);
        teamMngrButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        teamMngrButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamMngrButtonActionPerformed(evt);
            }
        });

        newsFeedButton.setForeground(new java.awt.Color(255, 255, 255));
        newsFeedButton.setText("News Feed");
        newsFeedButton.setBorderPainted(false);
        newsFeedButton.setContentAreaFilled(false);
        newsFeedButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        newsFeedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newsFeedButtonActionPerformed(evt);
            }
        });

        lastLoginButton.setForeground(new java.awt.Color(255, 255, 255));
        lastLoginButton.setText("Last Logins");
        lastLoginButton.setBorderPainted(false);
        lastLoginButton.setContentAreaFilled(false);
        lastLoginButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lastLoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastLoginButtonActionPerformed(evt);
            }
        });

        settingsButton.setForeground(new java.awt.Color(255, 255, 255));
        settingsButton.setText("Settings");
        settingsButton.setBorderPainted(false);
        settingsButton.setContentAreaFilled(false);
        settingsButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        settingsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                settingsButtonActionPerformed(evt);
            }
        });

        logOutButton.setForeground(new java.awt.Color(255, 255, 255));
        logOutButton.setText("Log Out");
        logOutButton.setBorderPainted(false);
        logOutButton.setContentAreaFilled(false);
        logOutButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(logOutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(settingsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastLoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newsFeedButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamMngrButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(credMngrButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dashboardButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dashboardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCredMenuButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(credMngrButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamMngrButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(newsFeedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lastLoginButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(settingsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addCredMenuButton, credMngrButton, dashboardButton, lastLoginButton, logOutButton, newsFeedButton, settingsButton, teamMngrButton, teamsButton});

        dashboardMainLP.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        dashboardMainLP.setLayout(new java.awt.CardLayout());

        credsDashPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Credentials"));

        credList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(credList);

        credSearchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                credSearchTFKeyReleased(evt);
            }
        });

        credEditButton.setBackground(new java.awt.Color(64, 138, 201));
        credEditButton.setForeground(new java.awt.Color(255, 255, 255));
        credEditButton.setText("Edit");
        credEditButton.setBorderPainted(false);
        credEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                credEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout credsDashPanelLayout = new javax.swing.GroupLayout(credsDashPanel);
        credsDashPanel.setLayout(credsDashPanelLayout);
        credsDashPanelLayout.setHorizontalGroup(
            credsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credsDashPanelLayout.createSequentialGroup()
                .addGroup(credsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(credsDashPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(credEditButton)
                        .addGap(25, 25, 25))
                    .addGroup(credsDashPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(credsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                            .addComponent(credSearchTF))))
                .addContainerGap())
        );
        credsDashPanelLayout.setVerticalGroup(
            credsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credsDashPanelLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(credSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(credEditButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teamsDashPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Teams"));
        teamsDashPanel.setPreferredSize(new java.awt.Dimension(396, 242));

        teamList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        teamList.setToolTipText("");
        jScrollPane2.setViewportView(teamList);

        teamSearchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                teamSearchTFKeyTyped(evt);
            }
        });

        teamEditButton.setBackground(new java.awt.Color(64, 138, 201));
        teamEditButton.setForeground(new java.awt.Color(255, 255, 255));
        teamEditButton.setText("Edit");
        teamEditButton.setBorderPainted(false);
        teamEditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamEditButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamsDashPanelLayout = new javax.swing.GroupLayout(teamsDashPanel);
        teamsDashPanel.setLayout(teamsDashPanelLayout);
        teamsDashPanelLayout.setHorizontalGroup(
            teamsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsDashPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teamsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                    .addComponent(teamSearchTF))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamsDashPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(teamEditButton)
                .addGap(25, 25, 25))
        );
        teamsDashPanelLayout.setVerticalGroup(
            teamsDashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsDashPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(teamSearchTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(teamEditButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(newsFeedEdPane);

        javax.swing.GroupLayout dashboardPanelLayout = new javax.swing.GroupLayout(dashboardPanel);
        dashboardPanel.setLayout(dashboardPanelLayout);
        dashboardPanelLayout.setHorizontalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(dashboardPanelLayout.createSequentialGroup()
                        .addComponent(credsDashPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(teamsDashPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dashboardPanelLayout.setVerticalGroup(
            dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dashboardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dashboardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(credsDashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamsDashPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
        );

        dashboardMainLP.add(dashboardPanel, "card2");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel20.setText("Add Credential");

        chooseCredCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Credential", "Bank Account", "Credit Card", "Email", "Login", "Software License", "Social Security Number(SSN)", "Website", "Wireless", "Custom" }));
        chooseCredCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCredCBActionPerformed(evt);
            }
        });

        addCredLP.setLayout(new java.awt.CardLayout());

        jLabel21.setText("Credential Name:");

        jLabel22.setText("Bank Name:");

        jLabel23.setText("Bank URL:");

        jLabel24.setText("Bank Username:");

        jLabel25.setText("Bank Password:");

        jLabel26.setText("Account Number:");

        jLabel27.setText("Routing Number:");

        javax.swing.GroupLayout bankAcctPanelLayout = new javax.swing.GroupLayout(bankAcctPanel);
        bankAcctPanel.setLayout(bankAcctPanelLayout);
        bankAcctPanelLayout.setHorizontalGroup(
            bankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bankAcctPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(bankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bankAcctNumTF, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(bankPasswordTF)
                    .addComponent(bankUsernameTF)
                    .addComponent(bankURLTF)
                    .addComponent(bankNameBATF)
                    .addComponent(bankRoutNumTF)
                    .addComponent(credBANameTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        bankAcctPanelLayout.setVerticalGroup(
            bankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bankAcctPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credBANameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankNameBATF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankURLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankUsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankAcctNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankRoutNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addCredLP.add(bankAcctPanel, "card2");

        jLabel28.setText("Credential Name:");

        jLabel29.setText("Bank Name:");

        jLabel30.setText("Credit Card Number:");

        jLabel31.setText("Expiration Date:");

        jLabel32.setText("CCV:");

        jLabel33.setText("Name on Card:");

        jLabel34.setText("Type of Card:");

        cardTypeFTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/YYYY"))));

        javax.swing.GroupLayout creditCardPanelLayout = new javax.swing.GroupLayout(creditCardPanel);
        creditCardPanel.setLayout(creditCardPanelLayout);
        creditCardPanelLayout.setHorizontalGroup(
            creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditCardPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cardTypeFTF, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(nameonCardTF, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ccvTF)
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(expDateCCTF)
                    .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(credCardNumTF)
                    .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bankNameCCTF)
                    .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(credCCNameTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        creditCardPanelLayout.setVerticalGroup(
            creditCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditCardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credCCNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bankNameCCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credCardNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expDateCCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel32)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ccvTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameonCardTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardTypeFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        addCredLP.add(creditCardPanel, "card3");

        jLabel19.setText("Credential Name:");

        jLabel35.setText("URL to Email Login Page:");

        jLabel36.setText("Email:");

        jLabel37.setText("Password:");

        javax.swing.GroupLayout emailPanelLayout = new javax.swing.GroupLayout(emailPanel);
        emailPanel.setLayout(emailPanelLayout);
        emailPanelLayout.setHorizontalGroup(
            emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, emailPanelLayout.createSequentialGroup()
                .addContainerGap(91, Short.MAX_VALUE)
                .addGroup(emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordEmTF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(urlEmailLoginTF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(credNameETF, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(105, 105, 105))
        );
        emailPanelLayout.setVerticalGroup(
            emailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(emailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel35)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urlEmailLoginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel36)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordEmTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        addCredLP.add(emailPanel, "card4");

        jLabel38.setText("Credential Name:");

        jLabel39.setText("Username:");

        jLabel40.setText("Password:");

        jLabel41.setText("Email Associated with Account:");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(credNameLTF)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameLogTF)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordLogTF)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(emailLogTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(197, Short.MAX_VALUE))
        );

        addCredLP.add(loginPanel, "card5");

        jLabel42.setText("Credential Name:");

        jLabel43.setText("Name of Software:");

        jLabel44.setText("Software key:");

        jLabel45.setText("URL for the Software:");

        jLabel46.setText("Expiration Date:");

        expDateSoftFTF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/YYYY"))));

        javax.swing.GroupLayout softLicPanelLayout = new javax.swing.GroupLayout(softLicPanel);
        softLicPanel.setLayout(softLicPanelLayout);
        softLicPanelLayout.setHorizontalGroup(
            softLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLicPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(softLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(credNameSLTF)
                    .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(softNameTF)
                    .addComponent(jLabel44, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(softKeyTF)
                    .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(urltoSoftTF)
                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(expDateSoftFTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        softLicPanelLayout.setVerticalGroup(
            softLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(softLicPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameSLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(softNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(softKeyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel45)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urltoSoftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel46)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(expDateSoftFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(145, Short.MAX_VALUE))
        );

        addCredLP.add(softLicPanel, "card6");

        jLabel47.setText("Credential Name:");

        jLabel48.setText("Name on Card:");

        jLabel49.setText("Social Security Number (SSN):");

        javax.swing.GroupLayout ssnPanelLayout = new javax.swing.GroupLayout(ssnPanel);
        ssnPanel.setLayout(ssnPanelLayout);
        ssnPanelLayout.setHorizontalGroup(
            ssnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ssnPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(ssnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel47, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(credNameSSNTF)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameonSSTF)
                    .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(ssnumTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        ssnPanelLayout.setVerticalGroup(
            ssnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ssnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel47)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameSSNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nameonSSTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ssnumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(248, Short.MAX_VALUE))
        );

        addCredLP.add(ssnPanel, "card7");

        jLabel50.setText("Credential Name:");

        jLabel51.setText("Name of Website:");

        jLabel52.setText("URL to Website:");

        jLabel53.setText("Username for Website:");

        jLabel54.setText("Password for Website:");

        jLabel55.setText("Email Associated with Username:");

        javax.swing.GroupLayout websitePanelLayout = new javax.swing.GroupLayout(websitePanel);
        websitePanel.setLayout(websitePanelLayout);
        websitePanelLayout.setHorizontalGroup(
            websitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(websitePanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(websitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(credNameWeTF)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(websNameTF)
                    .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(urltoWebsTF)
                    .addComponent(jLabel53, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameWeTF)
                    .addComponent(jLabel54, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordWeTF)
                    .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(emailWeTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        websitePanelLayout.setVerticalGroup(
            websitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(websitePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel50)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(websNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(urltoWebsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel55)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        addCredLP.add(websitePanel, "card8");

        jLabel56.setText("Credential Name:");

        jLabel57.setText("SSID:");

        jLabel58.setText("Encryption Type:");

        jLabel59.setText("Username:");

        jLabel60.setText("Password:");

        javax.swing.GroupLayout wirelessPanelLayout = new javax.swing.GroupLayout(wirelessPanel);
        wirelessPanel.setLayout(wirelessPanelLayout);
        wirelessPanelLayout.setHorizontalGroup(
            wirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wirelessPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(wirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(credNameWiTF)
                    .addComponent(jLabel57, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ssidTF)
                    .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(encryptionTypeTF)
                    .addComponent(jLabel59, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(usernameWiTF)
                    .addComponent(jLabel60, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(passwordWiTF))
                .addContainerGap(106, Short.MAX_VALUE))
        );
        wirelessPanelLayout.setVerticalGroup(
            wirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(wirelessPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ssidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel58)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(encryptionTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel59)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passwordWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        addCredLP.add(wirelessPanel, "card9");

        customSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        customPanel.setAutoscrolls(true);

        jLabel61.setText("Credential Name:");

        jLabel62.setText("Field Name:");

        jLabel63.setText("Field Content:");

        addFieldButton.setBackground(new java.awt.Color(64, 138, 201));
        addFieldButton.setForeground(new java.awt.Color(255, 255, 255));
        addFieldButton.setText("Add Field");
        addFieldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFieldButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout customPanelLayout = new javax.swing.GroupLayout(customPanel);
        customPanel.setLayout(customPanelLayout);
        customPanelLayout.setHorizontalGroup(
            customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel61, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(credNameCustTF)
                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(addFieldButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        customPanelLayout.setVerticalGroup(
            customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameCustTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel62)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFieldButton)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        customSP.setViewportView(customPanel);

        addCredLP.add(customSP, "card11");

        addCredButton.setBackground(new java.awt.Color(64, 138, 201));
        addCredButton.setForeground(new java.awt.Color(255, 255, 255));
        addCredButton.setText("Add Credential");
        addCredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCredButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCredHoldPanelLayout = new javax.swing.GroupLayout(addCredHoldPanel);
        addCredHoldPanel.setLayout(addCredHoldPanelLayout);
        addCredHoldPanelLayout.setHorizontalGroup(
            addCredHoldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                .addGroup(addCredHoldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addCredLP))
                    .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                        .addGroup(addCredHoldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                                .addGap(95, 95, 95)
                                .addComponent(addCredButton, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                                .addGap(100, 100, 100)
                                .addComponent(chooseCredCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        addCredHoldPanelLayout.setVerticalGroup(
            addCredHoldPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredHoldPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chooseCredCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredLP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout addCredPanelLayout = new javax.swing.GroupLayout(addCredPanel);
        addCredPanel.setLayout(addCredPanelLayout);
        addCredPanelLayout.setHorizontalGroup(
            addCredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredPanelLayout.createSequentialGroup()
                .addGroup(addCredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addCredPanelLayout.createSequentialGroup()
                        .addGap(320, 320, 320)
                        .addComponent(jLabel20))
                    .addGroup(addCredPanelLayout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(addCredHoldPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(240, Short.MAX_VALUE))
        );
        addCredPanelLayout.setVerticalGroup(
            addCredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredHoldPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        dashboardMainLP.add(addCredPanel, "card3");

        credMngrPanel.setPreferredSize(new java.awt.Dimension(835, 546));

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel17.setText("Credentials Manager");

        credsTypesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(credsTypesTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchCredManTF, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(searchCredManTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        addChooseCredCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Choose Credential", "Bank Account", "Credit Card", "Email", "Login", "Software License", "Social Security Number(SSN)", "Website", "Wireless", "Custom" }));
        addChooseCredCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChooseCredCBActionPerformed(evt);
            }
        });

        addCredManButton.setBackground(new java.awt.Color(64, 138, 201));
        addCredManButton.setForeground(new java.awt.Color(255, 255, 255));
        addCredManButton.setText("Add Credential");
        addCredManButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCredManButtonActionPerformed(evt);
            }
        });

        addCredManLP.setLayout(new java.awt.CardLayout());

        addBankAcctSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel18.setText("Credential Name:");

        jLabel66.setText("Bank Name:");

        jLabel67.setText("Bank URL:");

        jLabel68.setText("Bank Username:");

        jLabel69.setText("Bank Password:");

        jLabel70.setText("Account Number:");

        jLabel71.setText("Routing Number:");

        javax.swing.GroupLayout addBankAcctPanelLayout = new javax.swing.GroupLayout(addBankAcctPanel);
        addBankAcctPanel.setLayout(addBankAcctPanelLayout);
        addBankAcctPanelLayout.setHorizontalGroup(
            addBankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addBankAcctPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addBankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(jLabel66, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel67, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel68, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel69, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel70, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel71, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredBANameTF)
                    .addComponent(addBankNameBATF)
                    .addComponent(addBankURLTF)
                    .addComponent(addBankUsernameTF)
                    .addComponent(addBankPasswordTF)
                    .addComponent(addBankAcctNumTF)
                    .addComponent(addBankRoutNumTF, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        addBankAcctPanelLayout.setVerticalGroup(
            addBankAcctPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addBankAcctPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredBANameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel66)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankNameBATF, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel67)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankURLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel68)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankUsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel69)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankPasswordTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel70)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankAcctNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel71)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankRoutNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        addBankAcctSP.setViewportView(addBankAcctPanel);

        addCredManLP.add(addBankAcctSP, "card2");

        addCredCardSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel72.setText("Credential Name:");

        jLabel73.setText("Bank Name:");

        jLabel74.setText("Credit Card Number:");

        jLabel75.setText("Expiration Date:");

        jLabel76.setText("CCV:");

        jLabel77.setText("Name on Card:");

        jLabel78.setText("Type of Card:");

        javax.swing.GroupLayout addCredCardPanelLayout = new javax.swing.GroupLayout(addCredCardPanel);
        addCredCardPanel.setLayout(addCredCardPanelLayout);
        addCredCardPanelLayout.setHorizontalGroup(
            addCredCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredCardPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addCredCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel72, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredCCNameTF)
                    .addComponent(jLabel73, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBankNameCCTF)
                    .addComponent(jLabel74, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addCredCardNumTF)
                    .addComponent(jLabel75, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addExpDateCCTF)
                    .addComponent(jLabel76, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCcvTF)
                    .addComponent(jLabel77, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNameonCardTF)
                    .addComponent(jLabel78, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCardTypeTF))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        addCredCardPanelLayout.setVerticalGroup(
            addCredCardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCredCardPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel72)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredCCNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel73)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addBankNameCCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel74)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredCardNumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel75)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addExpDateCCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel76)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCcvTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel77)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNameonCardTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel78)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCardTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        addCredCardSP.setViewportView(addCredCardPanel);

        addCredManLP.add(addCredCardSP, "card3");

        jLabel79.setText("Credential Name:");

        jLabel80.setText("URL to Email Login Page:");

        jLabel81.setText("Email:");

        jLabel82.setText("Password:");

        javax.swing.GroupLayout addEmailPanelLayout = new javax.swing.GroupLayout(addEmailPanel);
        addEmailPanel.setLayout(addEmailPanelLayout);
        addEmailPanelLayout.setHorizontalGroup(
            addEmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmailPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addEmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel79, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredNameETF)
                    .addComponent(jLabel80, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addUrlEmailLoginTF)
                    .addComponent(jLabel81, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEmailTF)
                    .addComponent(jLabel82, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPasswordEmTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addEmailPanelLayout.setVerticalGroup(
            addEmailPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addEmailPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel79)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameETF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel80)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUrlEmailLoginTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel81)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEmailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel82)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPasswordEmTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        addCredManLP.add(addEmailPanel, "card4");

        jLabel83.setText("Credential Name:");

        jLabel84.setText("Username:");

        jLabel85.setText("Password:");

        jLabel86.setText("Email Associated With Account:");

        javax.swing.GroupLayout addLoginPanelLayout = new javax.swing.GroupLayout(addLoginPanel);
        addLoginPanel.setLayout(addLoginPanelLayout);
        addLoginPanelLayout.setHorizontalGroup(
            addLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLoginPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel83, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredNameLTF)
                    .addComponent(jLabel84, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUsernameLogTF)
                    .addComponent(jLabel85, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPasswordLogTF)
                    .addComponent(jLabel86, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addEmailLogTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addLoginPanelLayout.setVerticalGroup(
            addLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addLoginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel83)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel84)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUsernameLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel85)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPasswordLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel86)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEmailLogTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(188, Short.MAX_VALUE))
        );

        addCredManLP.add(addLoginPanel, "card5");

        jLabel87.setText("Credential Name:");

        jLabel88.setText("Name of Software:");

        jLabel89.setText("Software Key:");

        jLabel90.setText("URL for the software:");

        jLabel91.setText("Expiration Date:");

        javax.swing.GroupLayout addSoftLicPanelLayout = new javax.swing.GroupLayout(addSoftLicPanel);
        addSoftLicPanel.setLayout(addSoftLicPanelLayout);
        addSoftLicPanelLayout.setHorizontalGroup(
            addSoftLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSoftLicPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addSoftLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel87, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredNameSLTF)
                    .addComponent(jLabel88, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSoftNameTF)
                    .addComponent(jLabel89, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSoftKeyTF)
                    .addComponent(jLabel90, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addUrltoSoftTF)
                    .addComponent(jLabel91, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addExpDateSoftTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addSoftLicPanelLayout.setVerticalGroup(
            addSoftLicPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSoftLicPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel87)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameSLTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel88)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSoftNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel89)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSoftKeyTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel90)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUrltoSoftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel91)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addExpDateSoftTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        addCredManLP.add(addSoftLicPanel, "card6");

        jLabel92.setText("Credential Name:");

        jLabel93.setText("Name on Card:");

        jLabel94.setText("Social Security Number (SSN):");

        javax.swing.GroupLayout addSsnPanelLayout = new javax.swing.GroupLayout(addSsnPanel);
        addSsnPanel.setLayout(addSsnPanelLayout);
        addSsnPanelLayout.setHorizontalGroup(
            addSsnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSsnPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addSsnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel92, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredNameSSNTF)
                    .addComponent(jLabel93, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addNameonSSTF)
                    .addComponent(jLabel94, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addSsnumTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addSsnPanelLayout.setVerticalGroup(
            addSsnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSsnPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel92)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameSSNTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel93)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addNameonSSTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel94)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSsnumTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(239, Short.MAX_VALUE))
        );

        addCredManLP.add(addSsnPanel, "card7");

        jLabel95.setText("Credential Name:");

        jLabel96.setText("Name of Website:");

        jLabel97.setText("URL to Website:");

        jLabel98.setText("Username for Website:");

        jLabel99.setText("Password for Website:");

        jLabel100.setText("Email Associated with Username:");

        javax.swing.GroupLayout addWebsitePanelLayout = new javax.swing.GroupLayout(addWebsitePanel);
        addWebsitePanel.setLayout(addWebsitePanelLayout);
        addWebsitePanelLayout.setHorizontalGroup(
            addWebsitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addWebsitePanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addWebsitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel95, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addCredNameWeTF)
                    .addComponent(jLabel96, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addWebsNameTF)
                    .addComponent(jLabel97, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUrltoWebsTF)
                    .addComponent(jLabel98, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUsernameWeTF)
                    .addComponent(jLabel99, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPasswordWeTF)
                    .addComponent(jLabel100, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addEmailWeTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addWebsitePanelLayout.setVerticalGroup(
            addWebsitePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addWebsitePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel95)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel96, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addWebsNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel97)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUrltoWebsTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel98)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUsernameWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel99)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPasswordWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel100)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEmailWeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );

        addCredManLP.add(addWebsitePanel, "card8");

        jLabel101.setText("Credential Name:");

        jLabel102.setText("SSID:");

        jLabel103.setText("Encryption Type:");

        jLabel104.setText("Username:");

        jLabel105.setText("Password:");

        javax.swing.GroupLayout addWirelessPanelLayout = new javax.swing.GroupLayout(addWirelessPanel);
        addWirelessPanel.setLayout(addWirelessPanelLayout);
        addWirelessPanelLayout.setHorizontalGroup(
            addWirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addWirelessPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addWirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel101, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(addCredNameWiTF)
                    .addComponent(jLabel102, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSsidTF)
                    .addComponent(jLabel103, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEncryptionTypeTF)
                    .addComponent(jLabel104, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addUsernameWiTF)
                    .addComponent(jLabel105, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addPasswordWiTF))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        addWirelessPanelLayout.setVerticalGroup(
            addWirelessPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addWirelessPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel101)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredNameWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel102)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addSsidTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel103)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addEncryptionTypeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel104)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addUsernameWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel105)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addPasswordWiTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(137, Short.MAX_VALUE))
        );

        addCredManLP.add(addWirelessPanel, "card9");

        addCustomSP.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jLabel106.setText("Credential Name:");

        jLabel107.setText("Field Name:");

        jLabel108.setText("Field Content:");

        addFieldCustButton.setBackground(new java.awt.Color(64, 138, 201));
        addFieldCustButton.setForeground(new java.awt.Color(255, 255, 255));
        addFieldCustButton.setText("Add Field");
        addFieldCustButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFieldCustButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addCustomPanelLayout = new javax.swing.GroupLayout(addCustomPanel);
        addCustomPanel.setLayout(addCustomPanelLayout);
        addCustomPanelLayout.setHorizontalGroup(
            addCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomPanelLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addGroup(addCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel106, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(adCredNameCTF)
                    .addComponent(jLabel107, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldName1)
                    .addComponent(jLabel108, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldCont1)
                    .addComponent(addFieldCustButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
        addCustomPanelLayout.setVerticalGroup(
            addCustomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCustomPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel106)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(adCredNameCTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel107)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel108)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldCont1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFieldCustButton)
                .addContainerGap(215, Short.MAX_VALUE))
        );

        addCustomSP.setViewportView(addCustomPanel);

        addCredManLP.add(addCustomSP, "card10");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(addCredManButton, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(addChooseCredCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addCredManLP, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addChooseCredCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredManLP, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCredManButton)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Password Generator"));

        jLabel10.setText("Password Length:");

        pwLengthCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", "128" }));

        inSymbChB.setText("Include symbols");

        incNumbChB.setText("Include numbers");

        generatePwButton.setBackground(new java.awt.Color(64, 138, 201));
        generatePwButton.setForeground(new java.awt.Color(255, 255, 255));
        generatePwButton.setText("Generate");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pwGeneratedTF, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(18, 18, 18)
                                .addComponent(pwLengthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(inSymbChB)
                                .addGap(18, 18, 18)
                                .addComponent(incNumbChB))
                            .addComponent(generatePwButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(pwLengthCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inSymbChB)
                    .addComponent(incNumbChB))
                .addGap(18, 18, 18)
                .addComponent(pwGeneratedTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(generatePwButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout credMngrPanelLayout = new javax.swing.GroupLayout(credMngrPanel);
        credMngrPanel.setLayout(credMngrPanelLayout);
        credMngrPanelLayout.setHorizontalGroup(
            credMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credMngrPanelLayout.createSequentialGroup()
                .addGroup(credMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(credMngrPanelLayout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(credMngrPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(credMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        credMngrPanelLayout.setVerticalGroup(
            credMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(credMngrPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(credMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(credMngrPanelLayout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(27, 27, 27))
        );

        dashboardMainLP.add(credMngrPanel, "card4");

        teamTeamsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        jScrollPane8.setViewportView(teamTeamsList);

        javax.swing.GroupLayout teamsListPanelLayout = new javax.swing.GroupLayout(teamsListPanel);
        teamsListPanel.setLayout(teamsListPanelLayout);
        teamsListPanelLayout.setHorizontalGroup(
            teamsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
                .addContainerGap())
        );
        teamsListPanelLayout.setVerticalGroup(
            teamsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel11.setText("Teams");

        teamDetButton.setBackground(new java.awt.Color(64, 138, 201));
        teamDetButton.setForeground(new java.awt.Color(255, 255, 255));
        teamDetButton.setText("View Details");
        teamDetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                teamDetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamsPanelLayout = new javax.swing.GroupLayout(teamsPanel);
        teamsPanel.setLayout(teamsPanelLayout);
        teamsPanelLayout.setHorizontalGroup(
            teamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsPanelLayout.createSequentialGroup()
                .addGroup(teamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(teamsPanelLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(teamsListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(teamsPanelLayout.createSequentialGroup()
                        .addGap(368, 368, 368)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(teamSearchTeamTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addContainerGap(89, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(teamDetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        teamsPanelLayout.setVerticalGroup(
            teamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addComponent(teamSearchTeamTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamsListPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(teamDetButton)
                .addContainerGap(131, Short.MAX_VALUE))
        );

        dashboardMainLP.add(teamsPanel, "card5");

        teamNameDetLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        teamNameDetLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teamNameDetLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        teamNameDetLabel.setInheritsPopupMenu(false);

        jLabel110.setText("Team's Credentials:");

        jLabel111.setText("Team Members:");

        bigTeamCredList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        bigTeamCredList.setToolTipText("");
        jScrollPane11.setViewportView(bigTeamCredList);

        editTeamCredButton.setBackground(new java.awt.Color(64, 138, 201));
        editTeamCredButton.setForeground(new java.awt.Color(255, 255, 255));
        editTeamCredButton.setText("Edit Credential");
        editTeamCredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTeamCredButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane11, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(editTeamCredButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editTeamCredButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bigTeamMembList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane12.setViewportView(bigTeamMembList);

        editTeamMemButton.setBackground(new java.awt.Color(64, 138, 201));
        editTeamMemButton.setForeground(new java.awt.Color(255, 255, 255));
        editTeamMemButton.setText("View Member");
        editTeamMemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTeamMemButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editTeamMemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(editTeamMemButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout teamDetailBigPanelLayout = new javax.swing.GroupLayout(teamDetailBigPanel);
        teamDetailBigPanel.setLayout(teamDetailBigPanelLayout);
        teamDetailBigPanelLayout.setHorizontalGroup(
            teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamDetailBigPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamNameDetLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(teamDetailBigPanelLayout.createSequentialGroup()
                        .addGroup(teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(teamDetailBigPanelLayout.createSequentialGroup()
                                .addComponent(jLabel110)
                                .addGap(323, 323, 323)
                                .addComponent(jLabel111))
                            .addGroup(teamDetailBigPanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 23, Short.MAX_VALUE)))
                .addContainerGap())
        );
        teamDetailBigPanelLayout.setVerticalGroup(
            teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamDetailBigPanelLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(teamNameDetLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel110)
                    .addComponent(jLabel111))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(teamDetailBigPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        dashboardMainLP.add(teamDetailBigPanel, "card10");

        createTeamPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Create Team:"));

        jLabel3.setText("Name:");

        jLabel4.setText("Short Name:");

        createTeamButton.setBackground(new java.awt.Color(64, 138, 201));
        createTeamButton.setForeground(new java.awt.Color(255, 255, 255));
        createTeamButton.setText("Create Team");
        createTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTeamButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createTeamPanelLayout = new javax.swing.GroupLayout(createTeamPanel);
        createTeamPanel.setLayout(createTeamPanelLayout);
        createTeamPanelLayout.setHorizontalGroup(
            createTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTeamPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(createTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createTeamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(createTeamPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(teamShortNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(createTeamPanelLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(createTeamButton)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        createTeamPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel4});

        createTeamPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {teamNameTF, teamShortNameTF});

        createTeamPanelLayout.setVerticalGroup(
            createTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTeamPanelLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(createTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teamNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createTeamPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(teamShortNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(createTeamButton)
                .addGap(38, 38, 38))
        );

        ownedTeamsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Owned Teams:"));

        ownedTeamsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ownedTeamsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ownedTeamsListMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(ownedTeamsList);

        javax.swing.GroupLayout ownedTeamsPanelLayout = new javax.swing.GroupLayout(ownedTeamsPanel);
        ownedTeamsPanel.setLayout(ownedTeamsPanelLayout);
        ownedTeamsPanelLayout.setHorizontalGroup(
            ownedTeamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        ownedTeamsPanelLayout.setVerticalGroup(
            ownedTeamsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ownedTeamsPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane4)
                .addContainerGap())
        );

        teamsTMngrPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Teams:"));

        teamsTMList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        teamsTMList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                teamsTMListMouseReleased(evt);
            }
        });
        jScrollPane5.setViewportView(teamsTMList);

        javax.swing.GroupLayout teamsTMngrPanelLayout = new javax.swing.GroupLayout(teamsTMngrPanel);
        teamsTMngrPanel.setLayout(teamsTMngrPanelLayout);
        teamsTMngrPanelLayout.setHorizontalGroup(
            teamsTMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsTMngrPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        teamsTMngrPanelLayout.setVerticalGroup(
            teamsTMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamsTMngrPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );

        teamDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Team's Details:"));

        jLabel5.setText("Click on any team to see its details.");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel6.setText("General");

        jLabel7.setText("Name:");

        jLabel8.setText("Short Name:");

        gotoTeamButton.setBackground(new java.awt.Color(64, 138, 201));
        gotoTeamButton.setForeground(new java.awt.Color(255, 255, 255));
        gotoTeamButton.setText("Go to Team");
        gotoTeamButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotoTeamButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamDetailsPanelLayout = new javax.swing.GroupLayout(teamDetailsPanel);
        teamDetailsPanel.setLayout(teamDetailsPanelLayout);
        teamDetailsPanelLayout.setHorizontalGroup(
            teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(teamDetailsPanelLayout.createSequentialGroup()
                        .addGroup(teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8))
                        .addGap(13, 13, 13)
                        .addGroup(teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(teamShortNLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(teamNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(teamDetailsPanelLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(gotoTeamButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        teamDetailsPanelLayout.setVerticalGroup(
            teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addGap(39, 39, 39)
                .addGroup(teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(teamNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(teamDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(teamShortNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(gotoTeamButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teamCredPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Team Credentials:"));

        teamCredsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(teamCredsList);

        addTeamCredButton.setBackground(new java.awt.Color(64, 138, 201));
        addTeamCredButton.setForeground(new java.awt.Color(255, 255, 255));
        addTeamCredButton.setText("Add Credential");
        addTeamCredButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamCredButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamCredPanelLayout = new javax.swing.GroupLayout(teamCredPanel);
        teamCredPanel.setLayout(teamCredPanelLayout);
        teamCredPanelLayout.setHorizontalGroup(
            teamCredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamCredPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamCredPanelLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addComponent(addTeamCredButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        teamCredPanelLayout.setVerticalGroup(
            teamCredPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamCredPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addTeamCredButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        teamMembersPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Team's Members:"));

        teamMembList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(teamMembList);

        addTeamMembButton.setBackground(new java.awt.Color(64, 138, 201));
        addTeamMembButton.setForeground(new java.awt.Color(255, 255, 255));
        addTeamMembButton.setText("Add member");
        addTeamMembButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTeamMembButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout teamMembersPanelLayout = new javax.swing.GroupLayout(teamMembersPanel);
        teamMembersPanel.setLayout(teamMembersPanelLayout);
        teamMembersPanelLayout.setHorizontalGroup(
            teamMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamMembersPanelLayout.createSequentialGroup()
                .addContainerGap(67, Short.MAX_VALUE)
                .addComponent(addTeamMembButton)
                .addGap(86, 86, 86))
            .addGroup(teamMembersPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        teamMembersPanelLayout.setVerticalGroup(
            teamMembersPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamMembersPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addTeamMembButton)
                .addGap(0, 27, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout teamMngrPanelLayout = new javax.swing.GroupLayout(teamMngrPanel);
        teamMngrPanel.setLayout(teamMngrPanelLayout);
        teamMngrPanelLayout.setHorizontalGroup(
            teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, teamMngrPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(createTeamPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ownedTeamsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamCredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(teamsTMngrPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamMembersPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
        );
        teamMngrPanelLayout.setVerticalGroup(
            teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(teamMngrPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(createTeamPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(teamsTMngrPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ownedTeamsPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(teamMngrPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(teamDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamCredPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(teamMembersPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        dashboardMainLP.add(teamMngrPanel, "card6");

        javax.swing.GroupLayout newsFeedPanelLayout = new javax.swing.GroupLayout(newsFeedPanel);
        newsFeedPanel.setLayout(newsFeedPanelLayout);
        newsFeedPanelLayout.setHorizontalGroup(
            newsFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 834, Short.MAX_VALUE)
        );
        newsFeedPanelLayout.setVerticalGroup(
            newsFeedPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 560, Short.MAX_VALUE)
        );

        dashboardMainLP.add(newsFeedPanel, "card7");

        lastLoginsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date and Time", "Location", "Device", "IP Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(lastLoginsTable);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Last Logins");

        javax.swing.GroupLayout lastLoginPanelLayout = new javax.swing.GroupLayout(lastLoginPanel);
        lastLoginPanel.setLayout(lastLoginPanelLayout);
        lastLoginPanelLayout.setHorizontalGroup(
            lastLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lastLoginPanelLayout.createSequentialGroup()
                .addGroup(lastLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lastLoginPanelLayout.createSequentialGroup()
                        .addGap(366, 366, 366)
                        .addComponent(jLabel12))
                    .addGroup(lastLoginPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 810, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lastLoginPanelLayout.setVerticalGroup(
            lastLoginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, lastLoginPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        dashboardMainLP.add(lastLoginPanel, "card8");

        acctSettingPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Account Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel13.setText("First Name:");

        jLabel14.setText("Last Name:");

        jLabel15.setText("Email Address:");

        jLabel16.setText("Phone Number:");

        firstNameSetTF.setEditable(false);

        lastNameSetTF.setEditable(false);

        jLabel2.setText("Username:");

        usernameSetTF.setEditable(false);

        javax.swing.GroupLayout acctSettingPanelLayout = new javax.swing.GroupLayout(acctSettingPanel);
        acctSettingPanel.setLayout(acctSettingPanelLayout);
        acctSettingPanelLayout.setHorizontalGroup(
            acctSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acctSettingPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(acctSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(acctSettingPanelLayout.createSequentialGroup()
                        .addGroup(acctSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(emailSetTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lastNameSetTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(usernameSetTF, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(phNumSetFTF)
                            .addComponent(firstNameSetTF, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(57, 57, 57))
                    .addGroup(acctSettingPanelLayout.createSequentialGroup()
                        .addGroup(acctSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addContainerGap())))
        );
        acctSettingPanelLayout.setVerticalGroup(
            acctSettingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acctSettingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(firstNameSetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastNameSetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(usernameSetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailSetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(phNumSetFTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        secSettingsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Security Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18))); // NOI18N

        jLabel9.setText("Communication Method:");

        comMethSetCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Email", "SMS" }));

        jLabel64.setText("Account Time Out:");

        enTwoVerSetChB.setText("Enable on Two-Step Verification");

        jLabel65.setText("Two-Step Authentication Delivery:");

        twoStepADelCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Email", "SMS" }));

        updateSetButton.setBackground(new java.awt.Color(64, 138, 201));
        updateSetButton.setForeground(new java.awt.Color(255, 255, 255));
        updateSetButton.setText("Update");
        updateSetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateSetButtonActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        showIDButton.setBackground(new java.awt.Color(64, 138, 201));
        showIDButton.setForeground(new java.awt.Color(255, 255, 255));
        showIDButton.setText("Show ID");
        showIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showIDButtonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(showIDButton, "card2");

        hideIDButton.setBackground(new java.awt.Color(64, 138, 201));
        hideIDButton.setForeground(new java.awt.Color(255, 255, 255));
        hideIDButton.setText("Hide ID");
        hideIDButton.setToolTipText("");
        hideIDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideIDButtonActionPerformed(evt);
            }
        });
        jLayeredPane1.add(hideIDButton, "card3");

        javax.swing.GroupLayout secSettingsPanelLayout = new javax.swing.GroupLayout(secSettingsPanel);
        secSettingsPanel.setLayout(secSettingsPanelLayout);
        secSettingsPanelLayout.setHorizontalGroup(
            secSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secSettingsPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(secSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(comMethSetCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(timeOutSetTF)
                    .addComponent(twoStepADelCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(enTwoVerSetChB, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                    .addComponent(idLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel64, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel65, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1)
                    .addComponent(updateSetButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        secSettingsPanelLayout.setVerticalGroup(
            secSettingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(secSettingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comMethSetCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel64)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(timeOutSetTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(enTwoVerSetChB)
                .addGap(18, 18, 18)
                .addComponent(jLabel65)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(twoStepADelCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(updateSetButton)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout settingsPanelLayout = new javax.swing.GroupLayout(settingsPanel);
        settingsPanel.setLayout(settingsPanelLayout);
        settingsPanelLayout.setHorizontalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(acctSettingPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(secSettingsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );
        settingsPanelLayout.setVerticalGroup(
            settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(settingsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(settingsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(acctSettingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(secSettingsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(76, Short.MAX_VALUE))
        );

        dashboardMainLP.add(settingsPanel, "card9");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dashboardMainLP, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(dashboardMainLP)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //dashboard Button:
    private void dashboardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashboardButtonActionPerformed
        dashboardPanel.setVisible(true);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        DefaultListModel model = (DefaultListModel) credList.getModel();
        model.removeAllElements();
        credList.setModel(model);
        credList.setModel(InitCreds());
        teamList.setModel(InitTeams());
        custFieldIndex = 0;
    }//GEN-LAST:event_dashboardButtonActionPerformed

    //AddCredential Button:
    private void addCredMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCredMenuButtonActionPerformed
        addCredLP.setVisible(false);
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(true);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        chooseCredCB.setSelectedIndex(0);
        custFieldIndex = 0;
    }//GEN-LAST:event_addCredMenuButtonActionPerformed

    //CredentialManager Button:
    private void credMngrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credMngrButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(true);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        addCredManLP.setVisible(false);
        addChooseCredCB.setSelectedIndex(0);
        custFieldIndex = 0;
        //Populating table:
        DefaultTableModel tModel = new DefaultTableModel();
        tModel.addColumn("Name");
        tModel.addColumn("Type");
        for (Credential credential : RequestsHTTP.user.credentials) {
            String type = "";
            if(credential instanceof BankAccountCredential){
                type = "Bank Account";
            }
            else if(credential instanceof CreditCardCredential){
                type = "Credit Card";
            }
            else if(credential instanceof EmailCredential){
                type = "Email";
            }
            else if(credential instanceof LoginCredential){
                type = "Login";
            }
            else if(credential instanceof SoftwareLicenseCredential){
                type = "Software License";
            }
            else if(credential instanceof SocialSecurityCredential){
                type = "Social Security";
            }
            else if(credential instanceof WebsiteCredential){
                type = "Website";
            }
            else if(credential instanceof WirelessCredential){
                type = "Wireless";
            }
            else if(credential instanceof CustomCredential){
                type = "Custom";
            }
            tModel.addRow(new Object[]{credential.getName(), type});
        }
        credsTypesTable.setModel(tModel);
    }//GEN-LAST:event_credMngrButtonActionPerformed

    //Teams Button:
    private void teamsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamsButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(true);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        teamTeamsList.setModel(InitTeams());
        custFieldIndex = 0;
    }//GEN-LAST:event_teamsButtonActionPerformed

    //Team Manager Button:
    private void teamMngrButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamMngrButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(true);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        custFieldIndex = 0;
        
        PopulateManTeamLists();
        
    }//GEN-LAST:event_teamMngrButtonActionPerformed

    //News Feed Button:
    private void newsFeedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newsFeedButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(true);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(false);
        custFieldIndex = 0;
    }//GEN-LAST:event_newsFeedButtonActionPerformed

    //Last Logins Button:
    private void lastLoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastLoginButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(true);
        settingsPanel.setVisible(false);
        custFieldIndex = 0;
        PopulateLoginsTable();
    }//GEN-LAST:event_lastLoginButtonActionPerformed

    //Settings Button:
    private void settingsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsButtonActionPerformed
        dashboardPanel.setVisible(false);
        addCredPanel.setVisible(false);
        credMngrPanel.setVisible(false);
        teamsPanel.setVisible(false);
        teamDetailBigPanel.setVisible(false);
        teamMngrPanel.setVisible(false);
        newsFeedPanel.setVisible(false);
        lastLoginPanel.setVisible(false);
        settingsPanel.setVisible(true);
        showIDButton.setVisible(true);
        hideIDButton.setVisible(false);
        custFieldIndex = 0;
        PopulateSettings();
    }//GEN-LAST:event_settingsButtonActionPerformed

    //Log Out Button:
    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed

        RequestsHTTP.user = new User();
        //System.out.println(RequestsHTTP.user.credentials.size());
        LoginFrame lf = new LoginFrame();
        lf.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logOutButtonActionPerformed

    //Credential Selector comboBox from Add Credential Panel
    private void chooseCredCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCredCBActionPerformed

        if (chooseCredCB.getSelectedItem().equals("Choose Credential")) {
            addCredLP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Bank Account")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(true);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Credit Card")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(true);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Email")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(true);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Login")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(true);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Software License")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(true);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Social Security Number(SSN)")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(true);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Website")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(true);
            wirelessPanel.setVisible(false);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Wireless")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(true);
            customSP.setVisible(false);
        } else if (chooseCredCB.getSelectedItem().equals("Custom")) {
            addCredLP.setVisible(true);
            bankAcctPanel.setVisible(false);
            creditCardPanel.setVisible(false);
            emailPanel.setVisible(false);
            loginPanel.setVisible(false);
            softLicPanel.setVisible(false);
            ssnPanel.setVisible(false);
            websitePanel.setVisible(false);
            wirelessPanel.setVisible(false);
            customSP.setVisible(true);
        }
    }//GEN-LAST:event_chooseCredCBActionPerformed

    //Credential Edit Button:
    private void credEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_credEditButtonActionPerformed
        EditFrame ef = new EditFrame();
        String type;
        String credname = credList.getSelectedValue();
        if(credname !=null && !credname.isEmpty()){
            int size = RequestsHTTP.user.credentials.size();
            for (int i = 0; i < size; i++) {
                if (credname.equals(RequestsHTTP.user.credentials.get(i).getName())) {
                    if (RequestsHTTP.user.credentials.get(i) instanceof BankAccountCredential) {
                        type = "Bank Account";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof CreditCardCredential) {
                        type = "Credit Card";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof EmailCredential) {
                        type = "Email";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof LoginCredential) {
                        type = "Login";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof SoftwareLicenseCredential) {
                        type = "Software License";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof SocialSecurityCredential) {
                        type = "SSN";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof WebsiteCredential) {
                        type = "Website";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof WirelessCredential) {
                        type = "Wireless";
                        ef.ShowPanel(type, i);
                        break;
                    } else if (RequestsHTTP.user.credentials.get(i) instanceof CustomCredential) {
                        type = "Custom";
                        ef.ShowPanel(type, i);
                        break;
                    }
                }
                break;
            }
            ef.setVisible(true);
            ef.setDf(this);
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            ef.setLocation(dim.width / 2 - ef.getSize().width / 2, dim.height / 2 - ef.getSize().height / 2);
            this.setEnabled(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a credential to edit.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
        
    }//GEN-LAST:event_credEditButtonActionPerformed

    private void teamSearchTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_teamSearchTFKeyTyped

    }//GEN-LAST:event_teamSearchTFKeyTyped

    private void teamEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamEditButtonActionPerformed
        String teamname = teamList.getSelectedValue();
        if(teamname !=null && !teamname.isEmpty() && !" ()".equals(teamname)){
            DefaultListModel tModelCred = new DefaultListModel();
            DefaultListModel tModelMemb = new DefaultListModel();
            String teamName = "";
            String teamSName = "";
            String urlCred = "https://passtrunk.com/api/credential/team";
            String urlMemb = "https://passtrunk.com/api/team/members";
            String reqbody;
            for (int i = 0; i < RequestsHTTP.user.teams.size(); i++){
                if(teamname.equals(RequestsHTTP.user.teams.get(i).getName() + " (" + RequestsHTTP.user.teams.get(i).getShortName() + ")")){
                    try {
                        teamName = RequestsHTTP.user.teams.get(i).getName();
                        teamSName = RequestsHTTP.user.teams.get(i).getShortName();
                        RequestsHTTP.user.teams.get(i).teamCreds = new ArrayList();
                        RequestsHTTP.user.teams.get(i).teamMembers = new ArrayList();
                        
                        //Populating Team Credentials:
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpCred = new RequestsHTTP(urlCred, "GET", reqbody);
                        reqhttpCred.doTransaction("getteamcreds", i);
                        for(Credential cred: RequestsHTTP.user.teams.get(i).teamCreds){
                            tModelCred.addElement(cred.getName());
                        }
                        
                        //Populating Team members:
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamname", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.teams.get(i).getName(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpMemb = new RequestsHTTP(urlMemb, "GET", reqbody);
                        reqhttpMemb.doTransaction("getteammembers", i);
                        for(User user: RequestsHTTP.user.teams.get(i).teamMembers){
                            tModelMemb.addElement(user.getUserFullName());
                        }
                        break;
                    } catch (UnsupportedEncodingException ex) {
                        Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            bigTeamCredList.setModel(tModelCred);
            bigTeamMembList.setModel(tModelMemb);
            teamNameDetLabel.setText(teamname);
            dashboardPanel.setVisible(false);
            addCredPanel.setVisible(false);
            credMngrPanel.setVisible(false);
            teamsPanel.setVisible(false);
            teamDetailBigPanel.setVisible(true);
            teamMngrPanel.setVisible(false);
            newsFeedPanel.setVisible(false);
            lastLoginPanel.setVisible(false);
            settingsPanel.setVisible(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "Info: Please select a team.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_teamEditButtonActionPerformed

    private void addCredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCredButtonActionPerformed
        String selection = chooseCredCB.getSelectedItem().toString();
        String url = "";
        String reqbody = "";
        String uName = RequestsHTTP.user.getUsername();
        String uToken = RequestsHTTP.user.getToken();
        String key = uName.substring(0, 2) + uToken.substring(0,5) + uName.substring(2) + uToken.substring(5);
        try {
            switch (selection) {
                case "Choose Credential":
                    JOptionPane.showMessageDialog(null, "Please select a credential to add.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    break;
                case "Bank Account":
                    //Checking all fields are filled
                    if (credBANameTF.getText().isEmpty() || bankNameBATF.getText().isEmpty()
                            || bankURLTF.getText().isEmpty() || bankUsernameTF.getText().isEmpty()
                            || bankPasswordTF.getText().isEmpty() || bankAcctNumTF.getText().isEmpty()
                            || bankRoutNumTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/bankaccount";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credBANameTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("bankname", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankNameBATF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("bankurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankURLTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("bankusername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankUsernameTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("bankpassword", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankPasswordTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("routingnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankRoutNumTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("accountnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankAcctNumTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credBANameTF.setText("");
                    bankNameBATF.setText("");
                    bankURLTF.setText("");
                    bankUsernameTF.setText("");
                    bankPasswordTF.setText("");
                    bankAcctNumTF.setText("");
                    bankRoutNumTF.setText("");
                    break;
                case "Credit Card":
                    //Checking all fields are filled
                    if (credCCNameTF.getText().isEmpty() || bankNameCCTF.getText().isEmpty()
                            || credCardNumTF.getText().isEmpty() || expDateCCTF.getText().isEmpty()
                            || ccvTF.getText().isEmpty() || nameonCardTF.getText().isEmpty()
                            || cardTypeFTF.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/creditcard";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credCCNameTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("bankname", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(bankNameCCTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("creditcardnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(credCardNumTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("expdate", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(expDateCCTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("ccv", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(ccvTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("owner", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(nameonCardTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("type", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(cardTypeFTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credCCNameTF.setText("");
                    bankNameCCTF.setText("");
                    credCardNumTF.setText("");
                    expDateCCTF.setText("");
                    ccvTF.setText("");
                    nameonCardTF.setText("");
                    cardTypeFTF.setText("");
                    break;
                case "Email":
                    //Checking all fields are filled
                    if (credNameETF.getText().isEmpty() || urlEmailLoginTF.getText().isEmpty()
                            || emailTF.getText().isEmpty() || passwordEmTF.getText().isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/email";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameETF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("loginurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(urlEmailLoginTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("emailaddress", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(emailTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(passwordEmTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameLTF.setText("");
                    usernameLogTF.setText("");
                    emailLogTF.setText("");
                    passwordLogTF.setText("");
                    break;
                case "Login":
                    //Checking all fields are filled
                    if (credNameLTF.getText().isEmpty() || usernameLogTF.getText().isEmpty()
                            || emailLogTF.getText().isEmpty() || passwordLogTF.getText().isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/login";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameLTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("username", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(usernameLogTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(passwordLogTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("assocemail", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(emailLogTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameSLTF.setText("");
                    softNameTF.setText("");
                    softKeyTF.setText("");
                    urltoSoftTF.setText("");
                    expDateSoftFTF.setText("");
                    break;
                case "Software License":
                    //Checking all fields are filled
                    if (credNameSLTF.getText().isEmpty() || softNameTF.getText().isEmpty()
                            || softKeyTF.getText().isEmpty() || urltoSoftTF.getText().isEmpty()
                            || expDateSoftFTF.getText().isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/softwarelicense";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameSLTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("softwarename", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(softNameTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("softwarekey", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(softKeyTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("websiteurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(urltoSoftTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("expdate", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(expDateSoftFTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameSLTF.setText("");
                    softNameTF.setText("");
                    softKeyTF.setText("");
                    urltoSoftTF.setText("");
                    expDateSoftFTF.setText("");
                    break;
                case "Social Security Number(SSN)":
                    //Checking all fields are filled
                    if (credNameSSNTF.getText().isEmpty() || nameonSSTF.getText().isEmpty()
                            || ssnumTF.getText().isEmpty() )
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/ssn";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameSSNTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("ownername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(nameonSSTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("ssn", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(ssnumTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameSSNTF.setText("");
                    nameonSSTF.setText("");
                    ssnumTF.setText("");
                    break;
                case "Website":
                    //Checking all fields are filled
                    if (credNameWeTF.getText().isEmpty() || websNameTF.getText().isEmpty()
                            || urltoWebsTF.getText().isEmpty() || usernameWeTF.getText().isEmpty()
                            || passwordWeTF.getText().isEmpty() || emailWeTF.getText().isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/website";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameWeTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("websitename", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(websNameTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("websiteurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(urltoWebsTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("websiteusername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(usernameWeTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("websitepassword", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(passwordWeTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("websiteassocemail", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(emailWeTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameWeTF.setText("");
                    websNameTF.setText("");
                    urltoWebsTF.setText("");
                    usernameWeTF.setText("");
                    passwordWeTF.setText("");
                    emailWeTF.setText("");
                    break;
                case "Wireless":
                    //Checking all fields are filled
                    if (credNameWiTF.getText().isEmpty() || ssidTF.getText().isEmpty()
                            || encryptionTypeTF.getText().isEmpty() || usernameWiTF.getText().isEmpty()
                            || passwordWiTF.getText().isEmpty())
                    {
                        JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        url = "https://passtrunk.com/api/credential/wireless";
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(credNameWiTF.getText(), "UTF-8").replace("+", "%20")
                                + "&" + URLEncoder.encode("ssid", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(ssidTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("encryption", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(encryptionTypeTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("username", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(usernameWiTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(passwordWiTF.getText(), key), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                    }
                    //Emptying all fields
                    credNameWiTF.setText("");
                    ssidTF.setText("");
                    encryptionTypeTF.setText("");
                    usernameWiTF.setText("");
                    passwordWiTF.setText("");
                    break;
                case "Custom":
                    
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Error: No such credential exists.", "ErrorBox: ", JOptionPane.ERROR_MESSAGE);
                    break;
            }
            RequestsHTTP reqhttp = new RequestsHTTP(url, "POST", reqbody);
            reqhttp.doTransaction("",0);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addCredButtonActionPerformed

    //Edit team button from Teams Panel
    private void teamDetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_teamDetButtonActionPerformed
        String teamname = teamTeamsList.getSelectedValue();
        if(teamname !=null && !teamname.isEmpty()){
            teamsPanel.setVisible(false);
            teamDetailBigPanel.setVisible(true);
            dashboardPanel.setVisible(false);
            addCredPanel.setVisible(false);
            credMngrPanel.setVisible(false);
            teamMngrPanel.setVisible(false);
            newsFeedPanel.setVisible(false);
            lastLoginPanel.setVisible(false);
            settingsPanel.setVisible(false);
            teamNameDetLabel.setText(teamname);
            
            String teamName = "";
            String teamSName = "";
            String urlCred = "https://passtrunk.com/api/credential/team";
            String urlMemb = "https://passtrunk.com/api/team/members";
            String reqbody;
            DefaultListModel tModelCred = new DefaultListModel();
            DefaultListModel tModelMemb = new DefaultListModel();
            for(int i = 0; i < RequestsHTTP.user.teams.size(); i++){
                    if(teamname.equals(RequestsHTTP.user.teams.get(i).getName() + " " + "(" + RequestsHTTP.user.teams.get(i).getShortName() + ")")){
                        try {
                            teamName = RequestsHTTP.user.teams.get(i).getName();
                            teamSName = RequestsHTTP.user.teams.get(i).getShortName();
                            teamIndex = i;
                            
                            //Populating Team Credentials:
                            RequestsHTTP.user.teams.get(i).teamCreds = new ArrayList();
                            RequestsHTTP.user.teams.get(i).teamMembers = new ArrayList();
                            reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                    + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                            RequestsHTTP reqhttpCred = new RequestsHTTP(urlCred, "GET", reqbody);
                            reqhttpCred.doTransaction("getteamcreds", i);
                            for(Credential cred: RequestsHTTP.user.teams.get(i).teamCreds){
                                tModelCred.addElement(cred.getName());
                            }
                            
                            //Populating Team members:
                            reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                    + "&" + URLEncoder.encode("teamname", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.teams.get(i).getName(), "UTF-8")
                                    + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                            RequestsHTTP reqhttpMemb = new RequestsHTTP(urlMemb, "GET", reqbody);
                            reqhttpMemb.doTransaction("getteammembers", i);
                            for(User user: RequestsHTTP.user.teams.get(i).teamMembers){
                                tModelMemb.addElement(user.getUserFullName());
                            }
                            
                        } catch (UnsupportedEncodingException ex) {
                            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        break;
                    }
                    
                }
            bigTeamCredList.setModel(tModelCred);
            bigTeamMembList.setModel(tModelMemb);
        }
        else{
            JOptionPane.showMessageDialog(null, "Info: Please select a team.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_teamDetButtonActionPerformed

    private void editTeamMemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTeamMemButtonActionPerformed
        
    }//GEN-LAST:event_editTeamMemButtonActionPerformed

    private void editTeamCredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTeamCredButtonActionPerformed
        EditFrame ef = new EditFrame();
        String type;
        int credOwner = 0;
        String credname = bigTeamCredList.getSelectedValue();
        if(credname !=null && !credname.isEmpty()){
            int size = RequestsHTTP.user.teams.get(teamIndex).teamCreds.size();
            for (int i = 0; i < size; i++) {
                if (credname.equals(RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i).getName())) {
                    credOwner = RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i).getOwnerID();
                    if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof BankAccountCredential) {
                        type = "Bank Account";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof CreditCardCredential) {
                        type = "Credit Card";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof EmailCredential) {
                        type = "Email";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof LoginCredential) {
                        type = "Login";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof SoftwareLicenseCredential) {
                        type = "Software License";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof SocialSecurityCredential) {
                        type = "SSN";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof WebsiteCredential) {
                        type = "Website";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof WirelessCredential) {
                        type = "Wireless";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    } else if (RequestsHTTP.user.teams.get(teamIndex).teamCreds.get(i) instanceof CustomCredential) {
                        type = "Custom";
                        ef.ShowTeamCredPanel(type, teamIndex, i);
                        break;
                    }
                }
                
            }
            ef.setVisible(true);
            ef.setDf(this);  
            Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
            ef.setLocation(dim.width / 2 - ef.getSize().width / 2, dim.height / 2 - ef.getSize().height / 2);
            if(credOwner != RequestsHTTP.user.getUserID()){
                ef.setSaveEditButton();
            }
            this.setEnabled(false);
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a credential to edit.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_editTeamCredButtonActionPerformed

    private void showIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showIDButtonActionPerformed
        idLabel.setText(String.valueOf(RequestsHTTP.user.getUserID()));
        showIDButton.setVisible(false);
        hideIDButton.setVisible(true);
    }//GEN-LAST:event_showIDButtonActionPerformed

    private void hideIDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideIDButtonActionPerformed
        idLabel.setText("");
        showIDButton.setVisible(true);
        hideIDButton.setVisible(false);
    }//GEN-LAST:event_hideIDButtonActionPerformed

    private void updateSetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateSetButtonActionPerformed
        //settings data:
        int comMethod = comMethSetCB.getSelectedIndex()+1;
        int twoStepDel  = twoStepADelCB.getSelectedIndex()+1;
        String timeOut = timeOutSetTF.getText();
        boolean twoStepEn = enTwoVerSetChB.isSelected();
        
        //user data:
        String email = emailSetTF.getText();
        String phone = phNumSetFTF.getText();
        
        //request data:
        String url;        
        String reqbody;
        try {
            //updating settings:
            url = "https://passtrunk.com/api/settings/settings";
            reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("commmethod", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(comMethod), "UTF-8")
                    + "&" + URLEncoder.encode("twostepdelivery", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(twoStepDel), "UTF-8")
                    + "&" + URLEncoder.encode("timeout", "UTF-8") + "=" + URLEncoder.encode(timeOut, "UTF-8")
                    + "&" + URLEncoder.encode("visibilityauth", "UTF-8") + "=" + URLEncoder.encode("0", "UTF-8")
                    + "&" + URLEncoder.encode("twostepenabled", "UTF-8") + "=" + URLEncoder.encode(String.valueOf((twoStepEn == true)? 1:0), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
            RequestsHTTP reqhttp = new RequestsHTTP(url, "PUT", reqbody);
            reqhttp.doTransaction("getsettings",0);
            RequestsHTTP.user.settings.setComMethod(comMethod);
            RequestsHTTP.user.settings.setTwoStepDelivery(twoStepDel);
            RequestsHTTP.user.settings.setTimeOut(Integer.valueOf(timeOut));
            RequestsHTTP.user.settings.setTwoStepEnabled(twoStepEn);
            
            //updating user:
            url = "https://passtrunk.com/api/user/user";
            reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("emailaddress", "UTF-8") + "=" + URLEncoder.encode(email, "UTF-8")
                    + "&" + URLEncoder.encode("phone", "UTF-8") + "=" + URLEncoder.encode(phone, "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
            reqhttp = new RequestsHTTP(url, "PUT", reqbody);
            reqhttp.doTransaction("",0);
            RequestsHTTP.user.setEmail(email);
            RequestsHTTP.user.setPhNumber(phone);
            PopulateSettings();
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_updateSetButtonActionPerformed

    private void addCredManButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCredManButtonActionPerformed
        String selection = addChooseCredCB.getSelectedItem().toString();
        String url = "";
        String reqbody = "";
        String uName = RequestsHTTP.user.getUsername();
        String uToken = RequestsHTTP.user.getToken();
        String key = uName.substring(0, 2) + uToken.substring(0,5) + uName.substring(2) + uToken.substring(5);
        try {
            switch (selection) {
                case "Choose Credential":
                JOptionPane.showMessageDialog(null, "Please select a credential to add.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                break;
                case "Bank Account":
                //Checking all fields are filled
                if (addCredBANameTF.getText().isEmpty() || addBankNameBATF.getText().isEmpty()
                    || addBankURLTF.getText().isEmpty() || addBankUsernameTF.getText().isEmpty()
                    || addBankPasswordTF.getText().isEmpty() || addBankAcctNumTF.getText().isEmpty()
                    || addBankRoutNumTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/bankaccount";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredBANameTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("bankname", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankNameBATF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("bankurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankURLTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("bankusername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankUsernameTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("bankpassword", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankPasswordTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("routingnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankAcctNumTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("accountnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankRoutNumTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Credit Card":
                //Checking all fields are filled
                if (addCredCCNameTF.getText().isEmpty() || addBankNameCCTF.getText().isEmpty()
                    || addCredCardNumTF.getText().isEmpty() || addExpDateCCTF.getText().isEmpty()
                    || addCcvTF.getText().isEmpty() || addNameonCardTF.getText().isEmpty()
                    || addCardTypeTF.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/creditcard";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredCCNameTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("bankname", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addBankNameCCTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("creditcardnumber", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addCredCardNumTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("expdate", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addExpDateCCTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("ccv", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addCcvTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("owner", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addNameonCardTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("type", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addCardTypeTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Email":
                //Checking all fields are filled
                if (addCredNameETF.getText().isEmpty() || addUrlEmailLoginTF.getText().isEmpty()
                    || addEmailTF.getText().isEmpty() || addPasswordEmTF.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/email";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameETF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("loginurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUrlEmailLoginTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("emailaddress", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addEmailTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addPasswordEmTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Login":
                //Checking all fields are filled
                if (addCredNameLTF.getText().isEmpty() || addUsernameLogTF.getText().isEmpty()
                    || addEmailLogTF.getText().isEmpty() || addPasswordLogTF.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/login";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameLTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("username", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUsernameLogTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addPasswordLogTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("assocemail", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addEmailLogTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Software License":
                //Checking all fields are filled
                if (addCredNameSLTF.getText().isEmpty() || addSoftNameTF.getText().isEmpty()
                    || addSoftKeyTF.getText().isEmpty() || addUrltoSoftTF.getText().isEmpty()
                    || addExpDateSoftTF.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/softwarelicense";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameSLTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("softwarename", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addSoftNameTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("softwarekey", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addSoftKeyTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("websiteurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUrltoSoftTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("expdate", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addExpDateSoftTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Social Security Number(SSN)":
                //Checking all fields are filled
                if (addCredNameSSNTF.getText().isEmpty() || addNameonSSTF.getText().isEmpty()
                    || addSsnumTF.getText().isEmpty() )
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/ssn";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameSSNTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("ownername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addNameonSSTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("ssn", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addSsnumTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Website":
                //Checking all fields are filled
                if (addCredNameWeTF.getText().isEmpty() || addWebsNameTF.getText().isEmpty()
                    || addUrltoWebsTF.getText().isEmpty() || addUsernameWeTF.getText().isEmpty()
                    || addPasswordWeTF.getText().isEmpty() || addEmailWeTF.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/website";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameWeTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("websitename", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addWebsNameTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("websiteurl", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUrltoWebsTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("websiteusername", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUsernameWeTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("websitepassword", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addPasswordWeTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("websiteassocemail", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addEmailWeTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Wireless":
                //Checking all fields are filled
                if (addCredNameWiTF.getText().isEmpty() || addSsidTF.getText().isEmpty()
                    || addEncryptionTypeTF.getText().isEmpty() || addUsernameWiTF.getText().isEmpty()
                    || addPasswordWiTF.getText().isEmpty())
                {
                    JOptionPane.showMessageDialog(null, "Please fill out all fields.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    url = "https://passtrunk.com/api/credential/wireless";
                    reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(addCredNameWiTF.getText(), "UTF-8").replace("+", "%20")
                    + "&" + URLEncoder.encode("ssid", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addSsidTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("encryption", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addEncryptionTypeTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("username", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addUsernameWiTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("password", "UTF-8") + "=" + URLEncoder.encode(AESEncryptDecrypt.encrypt(addPasswordWiTF.getText(), key), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
                }
                break;
                case "Custom":
                break;
                default:
                JOptionPane.showMessageDialog(null, "Error: No such credential exists.", "ErrorBox: ", JOptionPane.ERROR_MESSAGE);
                break;
            }
            RequestsHTTP reqhttp = new RequestsHTTP(url, "POST", reqbody);
            reqhttp.doTransaction("",0);
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addCredManButtonActionPerformed

    private void addChooseCredCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChooseCredCBActionPerformed
        if (addChooseCredCB.getSelectedItem().equals("Choose Credential")) {
            addCredManLP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Bank Account")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(true);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Credit Card")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(true);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Email")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(true);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Login")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(true);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Software License")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(true);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Social Security Number(SSN)")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(true);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Website")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(true);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Wireless")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(true);
            addCustomSP.setVisible(false);
        } else if (addChooseCredCB.getSelectedItem().equals("Custom")) {
            addCredManLP.setVisible(true);
            addBankAcctSP.setVisible(false);
            addCredCardSP.setVisible(false);
            addEmailPanel.setVisible(false);
            addLoginPanel.setVisible(false);
            addSoftLicPanel.setVisible(false);
            addSsnPanel.setVisible(false);
            addWebsitePanel.setVisible(false);
            addWirelessPanel.setVisible(false);
            addCustomSP.setVisible(true);
        }
    }//GEN-LAST:event_addChooseCredCBActionPerformed

    //Add field from cred manager custom credential.
    private void addFieldCustButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFieldCustButtonActionPerformed
        
    }//GEN-LAST:event_addFieldCustButtonActionPerformed

    //add field from add credential panel.
    private void addFieldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFieldButtonActionPerformed
        JLabel jLabelAdd1 = new JLabel();
        JTextField fieldContTF2 = new JTextField();
        jLabelAdd1.setText("Field Content:");
        javax.swing.GroupLayout customPanelLayout = new javax.swing.GroupLayout(customPanel);
        customPanel.setLayout(customPanelLayout);
        customPanelLayout.setHorizontalGroup(
            customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addGroup(customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel61, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(credNameCustTF)
                    .addComponent(jLabel62, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(jLabel63, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jLabelAdd1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fieldContTF2)
                    .addComponent(addFieldButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        customPanelLayout.setVerticalGroup(
            customPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(customPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(credNameCustTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel62)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelAdd1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldContTF2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(addFieldButton)
                .addContainerGap((205 - jLabelAdd1.getHeight() - fieldContTF2.getHeight() - 11 - 6 - 18 - addFieldButton.getHeight()), Short.MAX_VALUE))
        );

        customSP.setViewportView(customPanel);

        //addCredLP.add(customSP, "card11");
    }//GEN-LAST:event_addFieldButtonActionPerformed

    private void gotoTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotoTeamButtonActionPerformed
        String teamname = teamNameLabel.getText() + " (" + teamShortNLabel.getText() + ")";
        if(teamname != null && !teamname.isEmpty() && !" ()".equals(teamname)){
            dashboardPanel.setVisible(false);
            addCredPanel.setVisible(false);
            credMngrPanel.setVisible(false);
            teamsPanel.setVisible(false);
            teamDetailBigPanel.setVisible(true);
            teamMngrPanel.setVisible(false);
            newsFeedPanel.setVisible(false);
            lastLoginPanel.setVisible(false);
            settingsPanel.setVisible(false);
            teamNameDetLabel.setText(teamname);
            DefaultListModel tModelCred = new DefaultListModel();
            DefaultListModel tModelMemb = new DefaultListModel();
            for (Team team: RequestsHTTP.user.teams){
                if(teamname.equals(team.getName() + " (" + team.getShortName() + ")")){
                    
                    //Populating Team Credentials:
                    for(Credential cred: team.teamCreds){
                        tModelCred.addElement(cred.getName());
                    }
                    
                    //Populating Team members:
                    for(User user: team.teamMembers){
                        tModelMemb.addElement(user.getUserFullName());
                    }
                }
            }
            bigTeamCredList.setModel(tModelCred);
            bigTeamMembList.setModel(tModelMemb);
        }
        else{
            JOptionPane.showMessageDialog(null, "Info: Please select a team.", "InfoBox: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_gotoTeamButtonActionPerformed

    private void addTeamCredButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamCredButtonActionPerformed
        AddCredToTeam addCred = new AddCredToTeam();
        addCred.setDashboard(this);
        for(int i = 0; i < RequestsHTTP.user.teams.size(); i++){
            if(teamNameLabel.getText().equals(RequestsHTTP.user.teams.get(i).getName())){
                addCred.setTeamIndex(i);
                break;
            }
        }
        addCred.PopulateList();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        addCred.setLocation(dim.width / 2 - addCred.getSize().width / 2, dim.height / 2 - addCred.getSize().height / 2);
        addCred.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_addTeamCredButtonActionPerformed

    private void addTeamMembButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTeamMembButtonActionPerformed
        AddMembToTeam addMemb = new AddMembToTeam();
        addMemb.setDashboard(this);
        for(int i = 0; i < RequestsHTTP.user.teams.size(); i++){
            if(teamNameLabel.getText().equals(RequestsHTTP.user.teams.get(i).getName())){
                addMemb.setTeamIndex(i);
                break;
            }
        }
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        addMemb.setLocation(dim.width / 2 - addMemb.getSize().width / 2, dim.height / 2 - addMemb.getSize().height / 2);
        addMemb.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_addTeamMembButtonActionPerformed

    private void createTeamButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTeamButtonActionPerformed
        
        String teamName = teamNameTF.getText();
        String teamShortN = teamShortNameTF.getText();
        boolean success = false;
        if(teamName.isEmpty() || teamShortN.isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill out all fields.", "Info: ", JOptionPane.INFORMATION_MESSAGE);
        }
        else{
            try {
                String url = "https://passtrunk.com/api/team/team";
                String reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                        + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                        + "&" + URLEncoder.encode("name", "UTF-8") + "=" + URLEncoder.encode(teamName, "UTF-8")
                        + "&" + URLEncoder.encode("shortname","UTF-8") + "=" + URLEncoder.encode(teamShortN, "UTF-8");
                RequestsHTTP reqhttpMemb = new RequestsHTTP(url, "POST", reqbody);
                success = reqhttpMemb.doTransaction("", 0);
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        if(success){
            InitTeams();
            PopulateManTeamLists();
        }
        teamNameTF.setText("");
        teamShortNameTF.setText("");
    }//GEN-LAST:event_createTeamButtonActionPerformed

    private void ownedTeamsListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ownedTeamsListMouseReleased
        try {
                teamsTMList.clearSelection();
                String teamName = "";
                String teamSName = "";
                String selection = ownedTeamsList.getSelectedValue();
                DefaultListModel tModelCred = new DefaultListModel();
                DefaultListModel tModelMemb = new DefaultListModel();
                String urlCred = "https://passtrunk.com/api/credential/team";
                String urlMemb = "https://passtrunk.com/api/team/members";
                String reqbody;

                for(int i = 0; i < RequestsHTTP.user.teams.size(); i++){
                    if(selection.equals(RequestsHTTP.user.teams.get(i).getName() + " " + "(" + RequestsHTTP.user.teams.get(i).getShortName() + ")")){
                        teamName = RequestsHTTP.user.teams.get(i).getName();
                        teamSName = RequestsHTTP.user.teams.get(i).getShortName();
                        teamIndex = i;
                        
                        //Populating Team Credentials:
                        RequestsHTTP.user.teams.get(i).teamCreds = new ArrayList();
                        RequestsHTTP.user.teams.get(i).teamMembers = new ArrayList();
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpCred = new RequestsHTTP(urlCred, "GET", reqbody);
                        reqhttpCred.doTransaction("getteamcreds", i);
                        for(Credential cred: RequestsHTTP.user.teams.get(i).teamCreds){
                            tModelCred.addElement(cred.getName());
                        }

                        //Populating Team members:
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamname", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.teams.get(i).getName(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpMemb = new RequestsHTTP(urlMemb, "GET", reqbody);
                        reqhttpMemb.doTransaction("getteammembers", i);
                        for(User user: RequestsHTTP.user.teams.get(i).teamMembers){
                            tModelMemb.addElement(user.getUserFullName());
                        }
                        break;
                    }
                    
                }
                teamCredsList.setModel(tModelCred);
                teamMembList.setModel(tModelMemb);
                teamNameLabel.setText(teamName);
                teamShortNLabel.setText(teamSName);
                //teamsTMList.clearSelection();
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_ownedTeamsListMouseReleased

    private void teamsTMListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teamsTMListMouseReleased
        try {
                ownedTeamsList.clearSelection();
                String teamName = "";
                String teamSName = "";
                String selection = teamsTMList.getSelectedValue();
                DefaultListModel tModelCred = new DefaultListModel();
                DefaultListModel tModelMemb = new DefaultListModel();
                String urlCred = "https://passtrunk.com/api/credential/team";
                String urlMemb = "https://passtrunk.com/api/team/members";
                String reqbody;
                
                for(int i = 0; i < RequestsHTTP.user.teams.size(); i++){
                    if(selection.equals(RequestsHTTP.user.teams.get(i).getName() + " (" + RequestsHTTP.user.teams.get(i).getShortName() + ")")){
                        teamName = RequestsHTTP.user.teams.get(i).getName();
                        teamSName = RequestsHTTP.user.teams.get(i).getShortName();
                        teamIndex = i;
                        //Populating Team Credentials:
                        RequestsHTTP.user.teams.get(i).teamCreds = new ArrayList();
                        RequestsHTTP.user.teams.get(i).teamMembers = new ArrayList();
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpCred = new RequestsHTTP(urlCred, "GET", reqbody);
                        reqhttpCred.doTransaction("getteamcreds", i);
                        for(Credential cred: RequestsHTTP.user.teams.get(i).teamCreds){
                            tModelCred.addElement(cred.getName());
                        }

                        //Populating Team members:
                        reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                                + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8")
                                + "&" + URLEncoder.encode("teamname", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.teams.get(i).getName(), "UTF-8")
                                + "&" + URLEncoder.encode("teamid","UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.teams.get(i).getId()), "UTF-8");
                        RequestsHTTP reqhttpMemb = new RequestsHTTP(urlMemb, "GET", reqbody);
                        reqhttpMemb.doTransaction("getteammembers", i);
                        for(User user: RequestsHTTP.user.teams.get(i).teamMembers){
                            tModelMemb.addElement(user.getUserFullName());
                        }
                        break;
                    }
                   
                }
                teamCredsList.setModel(tModelCred);
                teamMembList.setModel(tModelMemb);
                teamNameLabel.setText(teamName);
                teamShortNLabel.setText(teamSName);
                //ownedTeamsList.clearSelection();
            } catch (UnsupportedEncodingException ex) {
                Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_teamsTMListMouseReleased

    private void credSearchTFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_credSearchTFKeyReleased
        DefaultListModel lm = CustomModel(credSearchTF.getText());
        credList.setModel(lm);
    }//GEN-LAST:event_credSearchTFKeyReleased

    //Helper Methods:
    public void SetUserName() {
        nameLabel.setText(RequestsHTTP.user.getUserFullName());
        credList.setModel(InitCreds());
        teamList.setModel(InitTeams());
    }
    
    private DefaultListModel InitCreds() {
        try {
            //populating Credential List:
            RequestsHTTP.user.credentials = new ArrayList();
            String url = "https://passtrunk.com/api/credential/credential";
            String reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
            RequestsHTTP reqhttp = new RequestsHTTP(url, "GET", reqbody);
            reqhttp.doTransaction("getcred",0);
            DefaultListModel<String> model = new DefaultListModel();
            for (int i = 0; i < RequestsHTTP.user.credentials.size(); i++) {
                model.addElement(RequestsHTTP.user.credentials.get(i).getName());
                credNames.add(RequestsHTTP.user.credentials.get(i).getName());
            }
            return model;
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private DefaultListModel InitTeams(){
        try {
            //Populating Team List:
            RequestsHTTP.user.teams = new ArrayList();
            String url = "https://passtrunk.com/api/team/team";
            String reqbody;

            reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(Integer.toString(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");

            RequestsHTTP reqhttp = new RequestsHTTP(url, "GET", reqbody);
            reqhttp.doTransaction("getteams", 0);
            DefaultListModel<String> model = new DefaultListModel();
            for (int i = 0; i < RequestsHTTP.user.teams.size(); i++) {
                model.addElement(RequestsHTTP.user.teams.get(i).getName() + " " + "(" + RequestsHTTP.user.teams.get(i).getShortName() + ")");
            }
            return model;
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }
    
    private void PopulateSettings(){
        try {
            firstNameSetTF.setText(RequestsHTTP.user.getfName());
            lastNameSetTF.setText(RequestsHTTP.user.getlName());
            usernameSetTF.setText(RequestsHTTP.user.getUsername());
            emailSetTF.setText(RequestsHTTP.user.getEmail());
            phNumSetFTF.setText(RequestsHTTP.user.getPhNumber());

            String url = "https://passtrunk.com/api/settings/settings";        
            String reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
            
            RequestsHTTP reqhttp = new RequestsHTTP(url, "GET", reqbody);
            reqhttp.doTransaction("getsettings",0);
            
            comMethSetCB.setSelectedIndex(RequestsHTTP.user.settings.getComMethod()-1);
            timeOutSetTF.setText(String.valueOf(RequestsHTTP.user.settings.getTimeOut()));
            enTwoVerSetChB.setSelected(RequestsHTTP.user.settings.isTwoStepEnabled());
            if(RequestsHTTP.user.settings.getTwoStepDelivery() == 1)
            twoStepADelCB.setSelectedIndex(RequestsHTTP.user.settings.getTwoStepDelivery()-1);            
            
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void PopulateLoginsTable() {
        try {
            RequestsHTTP.user.loginList = new ArrayList();
            String url = "https://passtrunk.com/api/user/lastlogins";
            String reqbody = URLEncoder.encode("userid", "UTF-8") + "=" + URLEncoder.encode(String.valueOf(RequestsHTTP.user.getUserID()), "UTF-8")
                    + "&" + URLEncoder.encode("limit", "UTF-8") + "=" + URLEncoder.encode("25", "UTF-8")
                    + "&" + URLEncoder.encode("token", "UTF-8") + "=" + URLEncoder.encode(RequestsHTTP.user.getToken(), "UTF-8");
            RequestsHTTP reqhttp = new RequestsHTTP(url, "GET", reqbody);
            reqhttp.doTransaction("getloginlist",0);
            
            DefaultTableModel tModel = new DefaultTableModel();
            tModel.addColumn("Date and Time");
            tModel.addColumn("Location");
            tModel.addColumn("Device");
            tModel.addColumn("IP Address");
            
            for (LoginInfo log : RequestsHTTP.user.loginList) {
                tModel.addRow(new Object[]{log.getDateTime(), log.getLocation(), log.getDevice(), log.getIpAddress()});
            }
            lastLoginsTable.setModel(tModel);
            
        } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(DashboardFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void PopulateManTeamLists(){
        
        DefaultListModel ownedLmodel = new DefaultListModel();
        DefaultListModel allLmodel = new DefaultListModel();
        for (Team team: RequestsHTTP.user.teams){
            if(team.getOwnerID() == RequestsHTTP.user.getUserID()){
                ownedLmodel.addElement(team.getName() + " " + "(" + team.getShortName() + ")");
            }
            allLmodel.addElement(team.getName() + " " + "(" + team.getShortName() + ")");
        }
        ownedTeamsList.setModel(ownedLmodel);
        teamsTMList.setModel(allLmodel);      
        teamCredsList.setModel(new DefaultListModel());
        teamMembList.setModel(new DefaultListModel());
        teamNameLabel.setText("");
        teamShortNLabel.setText("");
    }
    
    private DefaultListModel CustomModel(String filter){
        DefaultListModel lm = new DefaultListModel();
        for(int i = 0; i < credNames.size(); i++){
            if(MeetReq(filter, i)){
                lm.addElement(credNames.get(i));
            }
        }
        return lm;
    }
    
    private boolean MeetReq(String filter, int i){
        if(filter == null || filter.length() == 0){
            return true;
        }
        if(filter.length() > credNames.get(i).length()){
            return false;
        }
        String tmp = credNames.get(i).substring(0,filter.length());
        return filter.equalsIgnoreCase(tmp);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardFrame().setVisible(true);
            }
        });
    }

    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel acctSettingPanel;
    private javax.swing.JTextField adCredNameCTF;
    private javax.swing.JTextField addBankAcctNumTF;
    private javax.swing.JPanel addBankAcctPanel;
    private javax.swing.JScrollPane addBankAcctSP;
    private javax.swing.JTextField addBankNameBATF;
    private javax.swing.JTextField addBankNameCCTF;
    private javax.swing.JTextField addBankPasswordTF;
    private javax.swing.JTextField addBankRoutNumTF;
    private javax.swing.JTextField addBankURLTF;
    private javax.swing.JTextField addBankUsernameTF;
    private javax.swing.JTextField addCardTypeTF;
    private javax.swing.JTextField addCcvTF;
    private javax.swing.JComboBox<String> addChooseCredCB;
    private javax.swing.JTextField addCredBANameTF;
    private javax.swing.JButton addCredButton;
    private javax.swing.JTextField addCredCCNameTF;
    private javax.swing.JTextField addCredCardNumTF;
    private javax.swing.JPanel addCredCardPanel;
    private javax.swing.JScrollPane addCredCardSP;
    private javax.swing.JPanel addCredHoldPanel;
    private javax.swing.JLayeredPane addCredLP;
    private javax.swing.JButton addCredManButton;
    private javax.swing.JLayeredPane addCredManLP;
    private javax.swing.JButton addCredMenuButton;
    private javax.swing.JTextField addCredNameETF;
    private javax.swing.JTextField addCredNameLTF;
    private javax.swing.JTextField addCredNameSLTF;
    private javax.swing.JTextField addCredNameSSNTF;
    private javax.swing.JTextField addCredNameWeTF;
    private javax.swing.JTextField addCredNameWiTF;
    private javax.swing.JPanel addCredPanel;
    private javax.swing.JPanel addCustomPanel;
    private javax.swing.JScrollPane addCustomSP;
    private javax.swing.JTextField addEmailLogTF;
    private javax.swing.JPanel addEmailPanel;
    private javax.swing.JTextField addEmailTF;
    private javax.swing.JTextField addEmailWeTF;
    private javax.swing.JTextField addEncryptionTypeTF;
    private javax.swing.JTextField addExpDateCCTF;
    private javax.swing.JTextField addExpDateSoftTF;
    private javax.swing.JButton addFieldButton;
    private javax.swing.JButton addFieldCustButton;
    private javax.swing.JPanel addLoginPanel;
    private javax.swing.JTextField addNameonCardTF;
    private javax.swing.JTextField addNameonSSTF;
    private javax.swing.JTextField addPasswordEmTF;
    private javax.swing.JTextField addPasswordLogTF;
    private javax.swing.JTextField addPasswordWeTF;
    private javax.swing.JTextField addPasswordWiTF;
    private javax.swing.JTextField addSoftKeyTF;
    private javax.swing.JPanel addSoftLicPanel;
    private javax.swing.JTextField addSoftNameTF;
    private javax.swing.JTextField addSsidTF;
    private javax.swing.JPanel addSsnPanel;
    private javax.swing.JTextField addSsnumTF;
    private javax.swing.JButton addTeamCredButton;
    private javax.swing.JButton addTeamMembButton;
    private javax.swing.JTextField addUrlEmailLoginTF;
    private javax.swing.JTextField addUrltoSoftTF;
    private javax.swing.JTextField addUrltoWebsTF;
    private javax.swing.JTextField addUsernameLogTF;
    private javax.swing.JTextField addUsernameWeTF;
    private javax.swing.JTextField addUsernameWiTF;
    private javax.swing.JTextField addWebsNameTF;
    private javax.swing.JPanel addWebsitePanel;
    private javax.swing.JPanel addWirelessPanel;
    private javax.swing.JTextField bankAcctNumTF;
    private javax.swing.JPanel bankAcctPanel;
    private javax.swing.JTextField bankNameBATF;
    private javax.swing.JTextField bankNameCCTF;
    private javax.swing.JTextField bankPasswordTF;
    private javax.swing.JTextField bankRoutNumTF;
    private javax.swing.JTextField bankURLTF;
    private javax.swing.JTextField bankUsernameTF;
    private javax.swing.JList<String> bigTeamCredList;
    private javax.swing.JList<String> bigTeamMembList;
    private javax.swing.JFormattedTextField cardTypeFTF;
    private javax.swing.JTextField ccvTF;
    private javax.swing.JComboBox<String> chooseCredCB;
    private javax.swing.JComboBox<String> comMethSetCB;
    private javax.swing.JButton createTeamButton;
    private javax.swing.JPanel createTeamPanel;
    private javax.swing.JTextField credBANameTF;
    private javax.swing.JTextField credCCNameTF;
    private javax.swing.JTextField credCardNumTF;
    private javax.swing.JButton credEditButton;
    private javax.swing.JList<String> credList;
    private javax.swing.JButton credMngrButton;
    private javax.swing.JPanel credMngrPanel;
    private javax.swing.JTextField credNameCustTF;
    private javax.swing.JTextField credNameETF;
    private javax.swing.JTextField credNameLTF;
    private javax.swing.JTextField credNameSLTF;
    private javax.swing.JTextField credNameSSNTF;
    private javax.swing.JTextField credNameWeTF;
    private javax.swing.JTextField credNameWiTF;
    private javax.swing.JTextField credSearchTF;
    private javax.swing.JPanel creditCardPanel;
    private javax.swing.JPanel credsDashPanel;
    private javax.swing.JTable credsTypesTable;
    private javax.swing.JPanel customPanel;
    private javax.swing.JScrollPane customSP;
    private javax.swing.JButton dashboardButton;
    private javax.swing.JLayeredPane dashboardMainLP;
    private javax.swing.JPanel dashboardPanel;
    private javax.swing.JButton editTeamCredButton;
    private javax.swing.JButton editTeamMemButton;
    private javax.swing.JTextField emailLogTF;
    private javax.swing.JPanel emailPanel;
    private javax.swing.JTextField emailSetTF;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTextField emailWeTF;
    private javax.swing.JCheckBox enTwoVerSetChB;
    private javax.swing.JTextField encryptionTypeTF;
    private javax.swing.JTextField expDateCCTF;
    private javax.swing.JFormattedTextField expDateSoftFTF;
    private javax.swing.JTextField fieldCont1;
    private javax.swing.JTextField fieldName1;
    private javax.swing.JTextField firstNameSetTF;
    private javax.swing.JButton generatePwButton;
    private javax.swing.JButton gotoTeamButton;
    private javax.swing.JButton hideIDButton;
    private javax.swing.JLabel idLabel;
    private javax.swing.JCheckBox inSymbChB;
    private javax.swing.JCheckBox incNumbChB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton lastLoginButton;
    private javax.swing.JPanel lastLoginPanel;
    private javax.swing.JTable lastLoginsTable;
    private javax.swing.JTextField lastNameSetTF;
    private javax.swing.JButton logOutButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JTextField nameonCardTF;
    private javax.swing.JTextField nameonSSTF;
    private javax.swing.JButton newsFeedButton;
    private javax.swing.JEditorPane newsFeedEdPane;
    private javax.swing.JPanel newsFeedPanel;
    private javax.swing.JList<String> ownedTeamsList;
    private javax.swing.JPanel ownedTeamsPanel;
    private javax.swing.JTextField passwordEmTF;
    private javax.swing.JTextField passwordLogTF;
    private javax.swing.JTextField passwordWeTF;
    private javax.swing.JTextField passwordWiTF;
    private javax.swing.JTextField phNumSetFTF;
    private javax.swing.JTextField pwGeneratedTF;
    private javax.swing.JComboBox<String> pwLengthCB;
    private javax.swing.JTextField searchCredManTF;
    private javax.swing.JPanel secSettingsPanel;
    private javax.swing.JButton settingsButton;
    private javax.swing.JPanel settingsPanel;
    private javax.swing.JButton showIDButton;
    private javax.swing.JTextField softKeyTF;
    private javax.swing.JPanel softLicPanel;
    private javax.swing.JTextField softNameTF;
    private javax.swing.JTextField ssidTF;
    private javax.swing.JPanel ssnPanel;
    private javax.swing.JTextField ssnumTF;
    private javax.swing.JPanel teamCredPanel;
    private javax.swing.JList<String> teamCredsList;
    private javax.swing.JButton teamDetButton;
    private javax.swing.JPanel teamDetailBigPanel;
    private javax.swing.JPanel teamDetailsPanel;
    private javax.swing.JButton teamEditButton;
    private javax.swing.JList<String> teamList;
    private javax.swing.JList<String> teamMembList;
    private javax.swing.JPanel teamMembersPanel;
    private javax.swing.JButton teamMngrButton;
    private javax.swing.JPanel teamMngrPanel;
    private javax.swing.JLabel teamNameDetLabel;
    private javax.swing.JLabel teamNameLabel;
    private javax.swing.JTextField teamNameTF;
    private javax.swing.JTextField teamSearchTF;
    private javax.swing.JTextField teamSearchTeamTF;
    private javax.swing.JLabel teamShortNLabel;
    private javax.swing.JTextField teamShortNameTF;
    private javax.swing.JList<String> teamTeamsList;
    private javax.swing.JButton teamsButton;
    private javax.swing.JPanel teamsDashPanel;
    private javax.swing.JPanel teamsListPanel;
    private javax.swing.JPanel teamsPanel;
    private javax.swing.JList<String> teamsTMList;
    private javax.swing.JPanel teamsTMngrPanel;
    private javax.swing.JTextField timeOutSetTF;
    private javax.swing.JComboBox<String> twoStepADelCB;
    private javax.swing.JButton updateSetButton;
    private javax.swing.JTextField urlEmailLoginTF;
    private javax.swing.JTextField urltoSoftTF;
    private javax.swing.JTextField urltoWebsTF;
    private javax.swing.JTextField usernameLogTF;
    private javax.swing.JTextField usernameSetTF;
    private javax.swing.JTextField usernameWeTF;
    private javax.swing.JTextField usernameWiTF;
    private javax.swing.JTextField websNameTF;
    private javax.swing.JPanel websitePanel;
    private javax.swing.JPanel wirelessPanel;
    // End of variables declaration//GEN-END:variables
// </editor-fold> // variable declarations
    
}
